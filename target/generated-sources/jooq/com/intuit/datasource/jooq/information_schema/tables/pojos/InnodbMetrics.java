/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.pojos;


import com.intuit.datasource.jooq.information_schema.tables.interfaces.IInnodbMetrics;

import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbMetrics implements IInnodbMetrics {

	private static final long serialVersionUID = -1604572844;

	private String    name;
	private String    subsystem;
	private Long      count;
	private Long      maxCount;
	private Long      minCount;
	private Double    avgCount;
	private Long      countReset;
	private Long      maxCountReset;
	private Long      minCountReset;
	private Double    avgCountReset;
	private Timestamp timeEnabled;
	private Timestamp timeDisabled;
	private Long      timeElapsed;
	private Timestamp timeReset;
	private String    status;
	private String    type;
	private String    comment;

	public InnodbMetrics() {}

	public InnodbMetrics(InnodbMetrics value) {
		this.name = value.name;
		this.subsystem = value.subsystem;
		this.count = value.count;
		this.maxCount = value.maxCount;
		this.minCount = value.minCount;
		this.avgCount = value.avgCount;
		this.countReset = value.countReset;
		this.maxCountReset = value.maxCountReset;
		this.minCountReset = value.minCountReset;
		this.avgCountReset = value.avgCountReset;
		this.timeEnabled = value.timeEnabled;
		this.timeDisabled = value.timeDisabled;
		this.timeElapsed = value.timeElapsed;
		this.timeReset = value.timeReset;
		this.status = value.status;
		this.type = value.type;
		this.comment = value.comment;
	}

	public InnodbMetrics(
		String    name,
		String    subsystem,
		Long      count,
		Long      maxCount,
		Long      minCount,
		Double    avgCount,
		Long      countReset,
		Long      maxCountReset,
		Long      minCountReset,
		Double    avgCountReset,
		Timestamp timeEnabled,
		Timestamp timeDisabled,
		Long      timeElapsed,
		Timestamp timeReset,
		String    status,
		String    type,
		String    comment
	) {
		this.name = name;
		this.subsystem = subsystem;
		this.count = count;
		this.maxCount = maxCount;
		this.minCount = minCount;
		this.avgCount = avgCount;
		this.countReset = countReset;
		this.maxCountReset = maxCountReset;
		this.minCountReset = minCountReset;
		this.avgCountReset = avgCountReset;
		this.timeEnabled = timeEnabled;
		this.timeDisabled = timeDisabled;
		this.timeElapsed = timeElapsed;
		this.timeReset = timeReset;
		this.status = status;
		this.type = type;
		this.comment = comment;
	}

	@Override
	public String getName() {
		return this.name;
	}

	@Override
	public void setName(String name) {
		this.name = name;
	}

	@Override
	public String getSubsystem() {
		return this.subsystem;
	}

	@Override
	public void setSubsystem(String subsystem) {
		this.subsystem = subsystem;
	}

	@Override
	public Long getCount() {
		return this.count;
	}

	@Override
	public void setCount(Long count) {
		this.count = count;
	}

	@Override
	public Long getMaxCount() {
		return this.maxCount;
	}

	@Override
	public void setMaxCount(Long maxCount) {
		this.maxCount = maxCount;
	}

	@Override
	public Long getMinCount() {
		return this.minCount;
	}

	@Override
	public void setMinCount(Long minCount) {
		this.minCount = minCount;
	}

	@Override
	public Double getAvgCount() {
		return this.avgCount;
	}

	@Override
	public void setAvgCount(Double avgCount) {
		this.avgCount = avgCount;
	}

	@Override
	public Long getCountReset() {
		return this.countReset;
	}

	@Override
	public void setCountReset(Long countReset) {
		this.countReset = countReset;
	}

	@Override
	public Long getMaxCountReset() {
		return this.maxCountReset;
	}

	@Override
	public void setMaxCountReset(Long maxCountReset) {
		this.maxCountReset = maxCountReset;
	}

	@Override
	public Long getMinCountReset() {
		return this.minCountReset;
	}

	@Override
	public void setMinCountReset(Long minCountReset) {
		this.minCountReset = minCountReset;
	}

	@Override
	public Double getAvgCountReset() {
		return this.avgCountReset;
	}

	@Override
	public void setAvgCountReset(Double avgCountReset) {
		this.avgCountReset = avgCountReset;
	}

	@Override
	public Timestamp getTimeEnabled() {
		return this.timeEnabled;
	}

	@Override
	public void setTimeEnabled(Timestamp timeEnabled) {
		this.timeEnabled = timeEnabled;
	}

	@Override
	public Timestamp getTimeDisabled() {
		return this.timeDisabled;
	}

	@Override
	public void setTimeDisabled(Timestamp timeDisabled) {
		this.timeDisabled = timeDisabled;
	}

	@Override
	public Long getTimeElapsed() {
		return this.timeElapsed;
	}

	@Override
	public void setTimeElapsed(Long timeElapsed) {
		this.timeElapsed = timeElapsed;
	}

	@Override
	public Timestamp getTimeReset() {
		return this.timeReset;
	}

	@Override
	public void setTimeReset(Timestamp timeReset) {
		this.timeReset = timeReset;
	}

	@Override
	public String getStatus() {
		return this.status;
	}

	@Override
	public void setStatus(String status) {
		this.status = status;
	}

	@Override
	public String getType() {
		return this.type;
	}

	@Override
	public void setType(String type) {
		this.type = type;
	}

	@Override
	public String getComment() {
		return this.comment;
	}

	@Override
	public void setComment(String comment) {
		this.comment = comment;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("InnodbMetrics (");

		sb.append(name);
		sb.append(", ").append(subsystem);
		sb.append(", ").append(count);
		sb.append(", ").append(maxCount);
		sb.append(", ").append(minCount);
		sb.append(", ").append(avgCount);
		sb.append(", ").append(countReset);
		sb.append(", ").append(maxCountReset);
		sb.append(", ").append(minCountReset);
		sb.append(", ").append(avgCountReset);
		sb.append(", ").append(timeEnabled);
		sb.append(", ").append(timeDisabled);
		sb.append(", ").append(timeElapsed);
		sb.append(", ").append(timeReset);
		sb.append(", ").append(status);
		sb.append(", ").append(type);
		sb.append(", ").append(comment);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IInnodbMetrics from) {
		setName(from.getName());
		setSubsystem(from.getSubsystem());
		setCount(from.getCount());
		setMaxCount(from.getMaxCount());
		setMinCount(from.getMinCount());
		setAvgCount(from.getAvgCount());
		setCountReset(from.getCountReset());
		setMaxCountReset(from.getMaxCountReset());
		setMinCountReset(from.getMinCountReset());
		setAvgCountReset(from.getAvgCountReset());
		setTimeEnabled(from.getTimeEnabled());
		setTimeDisabled(from.getTimeDisabled());
		setTimeElapsed(from.getTimeElapsed());
		setTimeReset(from.getTimeReset());
		setStatus(from.getStatus());
		setType(from.getType());
		setComment(from.getComment());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IInnodbMetrics> E into(E into) {
		into.from(this);
		return into;
	}
}

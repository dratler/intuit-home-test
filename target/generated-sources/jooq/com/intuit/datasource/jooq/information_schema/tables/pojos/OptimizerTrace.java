/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.pojos;


import com.intuit.datasource.jooq.information_schema.tables.interfaces.IOptimizerTrace;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OptimizerTrace implements IOptimizerTrace {

	private static final long serialVersionUID = -1147531249;

	private String  query;
	private String  trace;
	private Integer missingBytesBeyondMaxMemSize;
	private Byte    insufficientPrivileges;

	public OptimizerTrace() {}

	public OptimizerTrace(OptimizerTrace value) {
		this.query = value.query;
		this.trace = value.trace;
		this.missingBytesBeyondMaxMemSize = value.missingBytesBeyondMaxMemSize;
		this.insufficientPrivileges = value.insufficientPrivileges;
	}

	public OptimizerTrace(
		String  query,
		String  trace,
		Integer missingBytesBeyondMaxMemSize,
		Byte    insufficientPrivileges
	) {
		this.query = query;
		this.trace = trace;
		this.missingBytesBeyondMaxMemSize = missingBytesBeyondMaxMemSize;
		this.insufficientPrivileges = insufficientPrivileges;
	}

	@Override
	public String getQuery() {
		return this.query;
	}

	@Override
	public void setQuery(String query) {
		this.query = query;
	}

	@Override
	public String getTrace() {
		return this.trace;
	}

	@Override
	public void setTrace(String trace) {
		this.trace = trace;
	}

	@Override
	public Integer getMissingBytesBeyondMaxMemSize() {
		return this.missingBytesBeyondMaxMemSize;
	}

	@Override
	public void setMissingBytesBeyondMaxMemSize(Integer missingBytesBeyondMaxMemSize) {
		this.missingBytesBeyondMaxMemSize = missingBytesBeyondMaxMemSize;
	}

	@Override
	public Byte getInsufficientPrivileges() {
		return this.insufficientPrivileges;
	}

	@Override
	public void setInsufficientPrivileges(Byte insufficientPrivileges) {
		this.insufficientPrivileges = insufficientPrivileges;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("OptimizerTrace (");

		sb.append(query);
		sb.append(", ").append(trace);
		sb.append(", ").append(missingBytesBeyondMaxMemSize);
		sb.append(", ").append(insufficientPrivileges);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IOptimizerTrace from) {
		setQuery(from.getQuery());
		setTrace(from.getTrace());
		setMissingBytesBeyondMaxMemSize(from.getMissingBytesBeyondMaxMemSize());
		setInsufficientPrivileges(from.getInsufficientPrivileges());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IOptimizerTrace> E into(E into) {
		into.from(this);
		return into;
	}
}

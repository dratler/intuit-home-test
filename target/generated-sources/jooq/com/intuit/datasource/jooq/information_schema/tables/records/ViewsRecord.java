/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.records;


import com.intuit.datasource.jooq.information_schema.tables.Views;
import com.intuit.datasource.jooq.information_schema.tables.interfaces.IViews;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewsRecord extends TableRecordImpl<ViewsRecord> implements Record10<String, String, String, String, String, String, String, String, String, String>, IViews {

	private static final long serialVersionUID = -2101104762;

	/**
	 * Setter for <code>information_schema.VIEWS.TABLE_CATALOG</code>.
	 */
	@Override
	public void setTableCatalog(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>information_schema.VIEWS.TABLE_CATALOG</code>.
	 */
	@Override
	public String getTableCatalog() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>information_schema.VIEWS.TABLE_SCHEMA</code>.
	 */
	@Override
	public void setTableSchema(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>information_schema.VIEWS.TABLE_SCHEMA</code>.
	 */
	@Override
	public String getTableSchema() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>information_schema.VIEWS.TABLE_NAME</code>.
	 */
	@Override
	public void setTableName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>information_schema.VIEWS.TABLE_NAME</code>.
	 */
	@Override
	public String getTableName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>information_schema.VIEWS.VIEW_DEFINITION</code>.
	 */
	@Override
	public void setViewDefinition(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>information_schema.VIEWS.VIEW_DEFINITION</code>.
	 */
	@Override
	public String getViewDefinition() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>information_schema.VIEWS.CHECK_OPTION</code>.
	 */
	@Override
	public void setCheckOption(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>information_schema.VIEWS.CHECK_OPTION</code>.
	 */
	@Override
	public String getCheckOption() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>information_schema.VIEWS.IS_UPDATABLE</code>.
	 */
	@Override
	public void setIsUpdatable(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>information_schema.VIEWS.IS_UPDATABLE</code>.
	 */
	@Override
	public String getIsUpdatable() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>information_schema.VIEWS.DEFINER</code>.
	 */
	@Override
	public void setDefiner(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>information_schema.VIEWS.DEFINER</code>.
	 */
	@Override
	public String getDefiner() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>information_schema.VIEWS.SECURITY_TYPE</code>.
	 */
	@Override
	public void setSecurityType(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>information_schema.VIEWS.SECURITY_TYPE</code>.
	 */
	@Override
	public String getSecurityType() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>information_schema.VIEWS.CHARACTER_SET_CLIENT</code>.
	 */
	@Override
	public void setCharacterSetClient(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>information_schema.VIEWS.CHARACTER_SET_CLIENT</code>.
	 */
	@Override
	public String getCharacterSetClient() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>information_schema.VIEWS.COLLATION_CONNECTION</code>.
	 */
	@Override
	public void setCollationConnection(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>information_schema.VIEWS.COLLATION_CONNECTION</code>.
	 */
	@Override
	public String getCollationConnection() {
		return (String) getValue(9);
	}

	// -------------------------------------------------------------------------
	// Record10 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<String, String, String, String, String, String, String, String, String, String> fieldsRow() {
		return (Row10) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<String, String, String, String, String, String, String, String, String, String> valuesRow() {
		return (Row10) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Views.VIEWS.TABLE_CATALOG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Views.VIEWS.TABLE_SCHEMA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Views.VIEWS.TABLE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Views.VIEWS.VIEW_DEFINITION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Views.VIEWS.CHECK_OPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Views.VIEWS.IS_UPDATABLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Views.VIEWS.DEFINER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return Views.VIEWS.SECURITY_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Views.VIEWS.CHARACTER_SET_CLIENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return Views.VIEWS.COLLATION_CONNECTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getTableCatalog();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getTableSchema();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getTableName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getViewDefinition();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getCheckOption();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getIsUpdatable();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getDefiner();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getSecurityType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getCharacterSetClient();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getCollationConnection();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ViewsRecord value1(String value) {
		setTableCatalog(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ViewsRecord value2(String value) {
		setTableSchema(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ViewsRecord value3(String value) {
		setTableName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ViewsRecord value4(String value) {
		setViewDefinition(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ViewsRecord value5(String value) {
		setCheckOption(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ViewsRecord value6(String value) {
		setIsUpdatable(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ViewsRecord value7(String value) {
		setDefiner(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ViewsRecord value8(String value) {
		setSecurityType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ViewsRecord value9(String value) {
		setCharacterSetClient(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ViewsRecord value10(String value) {
		setCollationConnection(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ViewsRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IViews from) {
		setTableCatalog(from.getTableCatalog());
		setTableSchema(from.getTableSchema());
		setTableName(from.getTableName());
		setViewDefinition(from.getViewDefinition());
		setCheckOption(from.getCheckOption());
		setIsUpdatable(from.getIsUpdatable());
		setDefiner(from.getDefiner());
		setSecurityType(from.getSecurityType());
		setCharacterSetClient(from.getCharacterSetClient());
		setCollationConnection(from.getCollationConnection());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IViews> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ViewsRecord
	 */
	public ViewsRecord() {
		super(Views.VIEWS);
	}

	/**
	 * Create a detached, initialised ViewsRecord
	 */
	public ViewsRecord(String tableCatalog, String tableSchema, String tableName, String viewDefinition, String checkOption, String isUpdatable, String definer, String securityType, String characterSetClient, String collationConnection) {
		super(Views.VIEWS);

		setValue(0, tableCatalog);
		setValue(1, tableSchema);
		setValue(2, tableName);
		setValue(3, viewDefinition);
		setValue(4, checkOption);
		setValue(5, isUpdatable);
		setValue(6, definer);
		setValue(7, securityType);
		setValue(8, characterSetClient);
		setValue(9, collationConnection);
	}
}

/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.pojos;


import com.intuit.datasource.jooq.information_schema.tables.interfaces.IStatistics;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Statistics implements IStatistics {

	private static final long serialVersionUID = -2011283020;

	private String tableCatalog;
	private String tableSchema;
	private String tableName;
	private Long   nonUnique;
	private String indexSchema;
	private String indexName;
	private Long   seqInIndex;
	private String columnName;
	private String collation;
	private Long   cardinality;
	private Long   subPart;
	private String packed;
	private String nullable;
	private String indexType;
	private String comment;
	private String indexComment;

	public Statistics() {}

	public Statistics(Statistics value) {
		this.tableCatalog = value.tableCatalog;
		this.tableSchema = value.tableSchema;
		this.tableName = value.tableName;
		this.nonUnique = value.nonUnique;
		this.indexSchema = value.indexSchema;
		this.indexName = value.indexName;
		this.seqInIndex = value.seqInIndex;
		this.columnName = value.columnName;
		this.collation = value.collation;
		this.cardinality = value.cardinality;
		this.subPart = value.subPart;
		this.packed = value.packed;
		this.nullable = value.nullable;
		this.indexType = value.indexType;
		this.comment = value.comment;
		this.indexComment = value.indexComment;
	}

	public Statistics(
		String tableCatalog,
		String tableSchema,
		String tableName,
		Long   nonUnique,
		String indexSchema,
		String indexName,
		Long   seqInIndex,
		String columnName,
		String collation,
		Long   cardinality,
		Long   subPart,
		String packed,
		String nullable,
		String indexType,
		String comment,
		String indexComment
	) {
		this.tableCatalog = tableCatalog;
		this.tableSchema = tableSchema;
		this.tableName = tableName;
		this.nonUnique = nonUnique;
		this.indexSchema = indexSchema;
		this.indexName = indexName;
		this.seqInIndex = seqInIndex;
		this.columnName = columnName;
		this.collation = collation;
		this.cardinality = cardinality;
		this.subPart = subPart;
		this.packed = packed;
		this.nullable = nullable;
		this.indexType = indexType;
		this.comment = comment;
		this.indexComment = indexComment;
	}

	@Override
	public String getTableCatalog() {
		return this.tableCatalog;
	}

	@Override
	public void setTableCatalog(String tableCatalog) {
		this.tableCatalog = tableCatalog;
	}

	@Override
	public String getTableSchema() {
		return this.tableSchema;
	}

	@Override
	public void setTableSchema(String tableSchema) {
		this.tableSchema = tableSchema;
	}

	@Override
	public String getTableName() {
		return this.tableName;
	}

	@Override
	public void setTableName(String tableName) {
		this.tableName = tableName;
	}

	@Override
	public Long getNonUnique() {
		return this.nonUnique;
	}

	@Override
	public void setNonUnique(Long nonUnique) {
		this.nonUnique = nonUnique;
	}

	@Override
	public String getIndexSchema() {
		return this.indexSchema;
	}

	@Override
	public void setIndexSchema(String indexSchema) {
		this.indexSchema = indexSchema;
	}

	@Override
	public String getIndexName() {
		return this.indexName;
	}

	@Override
	public void setIndexName(String indexName) {
		this.indexName = indexName;
	}

	@Override
	public Long getSeqInIndex() {
		return this.seqInIndex;
	}

	@Override
	public void setSeqInIndex(Long seqInIndex) {
		this.seqInIndex = seqInIndex;
	}

	@Override
	public String getColumnName() {
		return this.columnName;
	}

	@Override
	public void setColumnName(String columnName) {
		this.columnName = columnName;
	}

	@Override
	public String getCollation() {
		return this.collation;
	}

	@Override
	public void setCollation(String collation) {
		this.collation = collation;
	}

	@Override
	public Long getCardinality() {
		return this.cardinality;
	}

	@Override
	public void setCardinality(Long cardinality) {
		this.cardinality = cardinality;
	}

	@Override
	public Long getSubPart() {
		return this.subPart;
	}

	@Override
	public void setSubPart(Long subPart) {
		this.subPart = subPart;
	}

	@Override
	public String getPacked() {
		return this.packed;
	}

	@Override
	public void setPacked(String packed) {
		this.packed = packed;
	}

	@Override
	public String getNullable() {
		return this.nullable;
	}

	@Override
	public void setNullable(String nullable) {
		this.nullable = nullable;
	}

	@Override
	public String getIndexType() {
		return this.indexType;
	}

	@Override
	public void setIndexType(String indexType) {
		this.indexType = indexType;
	}

	@Override
	public String getComment() {
		return this.comment;
	}

	@Override
	public void setComment(String comment) {
		this.comment = comment;
	}

	@Override
	public String getIndexComment() {
		return this.indexComment;
	}

	@Override
	public void setIndexComment(String indexComment) {
		this.indexComment = indexComment;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Statistics (");

		sb.append(tableCatalog);
		sb.append(", ").append(tableSchema);
		sb.append(", ").append(tableName);
		sb.append(", ").append(nonUnique);
		sb.append(", ").append(indexSchema);
		sb.append(", ").append(indexName);
		sb.append(", ").append(seqInIndex);
		sb.append(", ").append(columnName);
		sb.append(", ").append(collation);
		sb.append(", ").append(cardinality);
		sb.append(", ").append(subPart);
		sb.append(", ").append(packed);
		sb.append(", ").append(nullable);
		sb.append(", ").append(indexType);
		sb.append(", ").append(comment);
		sb.append(", ").append(indexComment);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IStatistics from) {
		setTableCatalog(from.getTableCatalog());
		setTableSchema(from.getTableSchema());
		setTableName(from.getTableName());
		setNonUnique(from.getNonUnique());
		setIndexSchema(from.getIndexSchema());
		setIndexName(from.getIndexName());
		setSeqInIndex(from.getSeqInIndex());
		setColumnName(from.getColumnName());
		setCollation(from.getCollation());
		setCardinality(from.getCardinality());
		setSubPart(from.getSubPart());
		setPacked(from.getPacked());
		setNullable(from.getNullable());
		setIndexType(from.getIndexType());
		setComment(from.getComment());
		setIndexComment(from.getIndexComment());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IStatistics> E into(E into) {
		into.from(this);
		return into;
	}
}

/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.pojos;


import com.intuit.datasource.jooq.information_schema.tables.interfaces.IKeyColumnUsage;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KeyColumnUsage implements IKeyColumnUsage {

	private static final long serialVersionUID = 595369679;

	private String constraintCatalog;
	private String constraintSchema;
	private String constraintName;
	private String tableCatalog;
	private String tableSchema;
	private String tableName;
	private String columnName;
	private Long   ordinalPosition;
	private Long   positionInUniqueConstraint;
	private String referencedTableSchema;
	private String referencedTableName;
	private String referencedColumnName;

	public KeyColumnUsage() {}

	public KeyColumnUsage(KeyColumnUsage value) {
		this.constraintCatalog = value.constraintCatalog;
		this.constraintSchema = value.constraintSchema;
		this.constraintName = value.constraintName;
		this.tableCatalog = value.tableCatalog;
		this.tableSchema = value.tableSchema;
		this.tableName = value.tableName;
		this.columnName = value.columnName;
		this.ordinalPosition = value.ordinalPosition;
		this.positionInUniqueConstraint = value.positionInUniqueConstraint;
		this.referencedTableSchema = value.referencedTableSchema;
		this.referencedTableName = value.referencedTableName;
		this.referencedColumnName = value.referencedColumnName;
	}

	public KeyColumnUsage(
		String constraintCatalog,
		String constraintSchema,
		String constraintName,
		String tableCatalog,
		String tableSchema,
		String tableName,
		String columnName,
		Long   ordinalPosition,
		Long   positionInUniqueConstraint,
		String referencedTableSchema,
		String referencedTableName,
		String referencedColumnName
	) {
		this.constraintCatalog = constraintCatalog;
		this.constraintSchema = constraintSchema;
		this.constraintName = constraintName;
		this.tableCatalog = tableCatalog;
		this.tableSchema = tableSchema;
		this.tableName = tableName;
		this.columnName = columnName;
		this.ordinalPosition = ordinalPosition;
		this.positionInUniqueConstraint = positionInUniqueConstraint;
		this.referencedTableSchema = referencedTableSchema;
		this.referencedTableName = referencedTableName;
		this.referencedColumnName = referencedColumnName;
	}

	@Override
	public String getConstraintCatalog() {
		return this.constraintCatalog;
	}

	@Override
	public void setConstraintCatalog(String constraintCatalog) {
		this.constraintCatalog = constraintCatalog;
	}

	@Override
	public String getConstraintSchema() {
		return this.constraintSchema;
	}

	@Override
	public void setConstraintSchema(String constraintSchema) {
		this.constraintSchema = constraintSchema;
	}

	@Override
	public String getConstraintName() {
		return this.constraintName;
	}

	@Override
	public void setConstraintName(String constraintName) {
		this.constraintName = constraintName;
	}

	@Override
	public String getTableCatalog() {
		return this.tableCatalog;
	}

	@Override
	public void setTableCatalog(String tableCatalog) {
		this.tableCatalog = tableCatalog;
	}

	@Override
	public String getTableSchema() {
		return this.tableSchema;
	}

	@Override
	public void setTableSchema(String tableSchema) {
		this.tableSchema = tableSchema;
	}

	@Override
	public String getTableName() {
		return this.tableName;
	}

	@Override
	public void setTableName(String tableName) {
		this.tableName = tableName;
	}

	@Override
	public String getColumnName() {
		return this.columnName;
	}

	@Override
	public void setColumnName(String columnName) {
		this.columnName = columnName;
	}

	@Override
	public Long getOrdinalPosition() {
		return this.ordinalPosition;
	}

	@Override
	public void setOrdinalPosition(Long ordinalPosition) {
		this.ordinalPosition = ordinalPosition;
	}

	@Override
	public Long getPositionInUniqueConstraint() {
		return this.positionInUniqueConstraint;
	}

	@Override
	public void setPositionInUniqueConstraint(Long positionInUniqueConstraint) {
		this.positionInUniqueConstraint = positionInUniqueConstraint;
	}

	@Override
	public String getReferencedTableSchema() {
		return this.referencedTableSchema;
	}

	@Override
	public void setReferencedTableSchema(String referencedTableSchema) {
		this.referencedTableSchema = referencedTableSchema;
	}

	@Override
	public String getReferencedTableName() {
		return this.referencedTableName;
	}

	@Override
	public void setReferencedTableName(String referencedTableName) {
		this.referencedTableName = referencedTableName;
	}

	@Override
	public String getReferencedColumnName() {
		return this.referencedColumnName;
	}

	@Override
	public void setReferencedColumnName(String referencedColumnName) {
		this.referencedColumnName = referencedColumnName;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("KeyColumnUsage (");

		sb.append(constraintCatalog);
		sb.append(", ").append(constraintSchema);
		sb.append(", ").append(constraintName);
		sb.append(", ").append(tableCatalog);
		sb.append(", ").append(tableSchema);
		sb.append(", ").append(tableName);
		sb.append(", ").append(columnName);
		sb.append(", ").append(ordinalPosition);
		sb.append(", ").append(positionInUniqueConstraint);
		sb.append(", ").append(referencedTableSchema);
		sb.append(", ").append(referencedTableName);
		sb.append(", ").append(referencedColumnName);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IKeyColumnUsage from) {
		setConstraintCatalog(from.getConstraintCatalog());
		setConstraintSchema(from.getConstraintSchema());
		setConstraintName(from.getConstraintName());
		setTableCatalog(from.getTableCatalog());
		setTableSchema(from.getTableSchema());
		setTableName(from.getTableName());
		setColumnName(from.getColumnName());
		setOrdinalPosition(from.getOrdinalPosition());
		setPositionInUniqueConstraint(from.getPositionInUniqueConstraint());
		setReferencedTableSchema(from.getReferencedTableSchema());
		setReferencedTableName(from.getReferencedTableName());
		setReferencedColumnName(from.getReferencedColumnName());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IKeyColumnUsage> E into(E into) {
		into.from(this);
		return into;
	}
}

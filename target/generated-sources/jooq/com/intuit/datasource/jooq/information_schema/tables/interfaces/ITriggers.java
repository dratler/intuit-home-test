/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.interfaces;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ITriggers extends Serializable {

	/**
	 * Setter for <code>information_schema.TRIGGERS.TRIGGER_CATALOG</code>.
	 */
	public void setTriggerCatalog(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.TRIGGER_CATALOG</code>.
	 */
	public String getTriggerCatalog();

	/**
	 * Setter for <code>information_schema.TRIGGERS.TRIGGER_SCHEMA</code>.
	 */
	public void setTriggerSchema(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.TRIGGER_SCHEMA</code>.
	 */
	public String getTriggerSchema();

	/**
	 * Setter for <code>information_schema.TRIGGERS.TRIGGER_NAME</code>.
	 */
	public void setTriggerName(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.TRIGGER_NAME</code>.
	 */
	public String getTriggerName();

	/**
	 * Setter for <code>information_schema.TRIGGERS.EVENT_MANIPULATION</code>.
	 */
	public void setEventManipulation(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.EVENT_MANIPULATION</code>.
	 */
	public String getEventManipulation();

	/**
	 * Setter for <code>information_schema.TRIGGERS.EVENT_OBJECT_CATALOG</code>.
	 */
	public void setEventObjectCatalog(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.EVENT_OBJECT_CATALOG</code>.
	 */
	public String getEventObjectCatalog();

	/**
	 * Setter for <code>information_schema.TRIGGERS.EVENT_OBJECT_SCHEMA</code>.
	 */
	public void setEventObjectSchema(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.EVENT_OBJECT_SCHEMA</code>.
	 */
	public String getEventObjectSchema();

	/**
	 * Setter for <code>information_schema.TRIGGERS.EVENT_OBJECT_TABLE</code>.
	 */
	public void setEventObjectTable(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.EVENT_OBJECT_TABLE</code>.
	 */
	public String getEventObjectTable();

	/**
	 * Setter for <code>information_schema.TRIGGERS.ACTION_ORDER</code>.
	 */
	public void setActionOrder(Long value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.ACTION_ORDER</code>.
	 */
	public Long getActionOrder();

	/**
	 * Setter for <code>information_schema.TRIGGERS.ACTION_CONDITION</code>.
	 */
	public void setActionCondition(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.ACTION_CONDITION</code>.
	 */
	public String getActionCondition();

	/**
	 * Setter for <code>information_schema.TRIGGERS.ACTION_STATEMENT</code>.
	 */
	public void setActionStatement(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.ACTION_STATEMENT</code>.
	 */
	public String getActionStatement();

	/**
	 * Setter for <code>information_schema.TRIGGERS.ACTION_ORIENTATION</code>.
	 */
	public void setActionOrientation(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.ACTION_ORIENTATION</code>.
	 */
	public String getActionOrientation();

	/**
	 * Setter for <code>information_schema.TRIGGERS.ACTION_TIMING</code>.
	 */
	public void setActionTiming(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.ACTION_TIMING</code>.
	 */
	public String getActionTiming();

	/**
	 * Setter for <code>information_schema.TRIGGERS.ACTION_REFERENCE_OLD_TABLE</code>.
	 */
	public void setActionReferenceOldTable(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.ACTION_REFERENCE_OLD_TABLE</code>.
	 */
	public String getActionReferenceOldTable();

	/**
	 * Setter for <code>information_schema.TRIGGERS.ACTION_REFERENCE_NEW_TABLE</code>.
	 */
	public void setActionReferenceNewTable(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.ACTION_REFERENCE_NEW_TABLE</code>.
	 */
	public String getActionReferenceNewTable();

	/**
	 * Setter for <code>information_schema.TRIGGERS.ACTION_REFERENCE_OLD_ROW</code>.
	 */
	public void setActionReferenceOldRow(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.ACTION_REFERENCE_OLD_ROW</code>.
	 */
	public String getActionReferenceOldRow();

	/**
	 * Setter for <code>information_schema.TRIGGERS.ACTION_REFERENCE_NEW_ROW</code>.
	 */
	public void setActionReferenceNewRow(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.ACTION_REFERENCE_NEW_ROW</code>.
	 */
	public String getActionReferenceNewRow();

	/**
	 * Setter for <code>information_schema.TRIGGERS.CREATED</code>.
	 */
	public void setCreated(Timestamp value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.CREATED</code>.
	 */
	public Timestamp getCreated();

	/**
	 * Setter for <code>information_schema.TRIGGERS.SQL_MODE</code>.
	 */
	public void setSqlMode(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.SQL_MODE</code>.
	 */
	public String getSqlMode();

	/**
	 * Setter for <code>information_schema.TRIGGERS.DEFINER</code>.
	 */
	public void setDefiner(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.DEFINER</code>.
	 */
	public String getDefiner();

	/**
	 * Setter for <code>information_schema.TRIGGERS.CHARACTER_SET_CLIENT</code>.
	 */
	public void setCharacterSetClient(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.CHARACTER_SET_CLIENT</code>.
	 */
	public String getCharacterSetClient();

	/**
	 * Setter for <code>information_schema.TRIGGERS.COLLATION_CONNECTION</code>.
	 */
	public void setCollationConnection(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.COLLATION_CONNECTION</code>.
	 */
	public String getCollationConnection();

	/**
	 * Setter for <code>information_schema.TRIGGERS.DATABASE_COLLATION</code>.
	 */
	public void setDatabaseCollation(String value);

	/**
	 * Getter for <code>information_schema.TRIGGERS.DATABASE_COLLATION</code>.
	 */
	public String getDatabaseCollation();

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Load data from another generated Record/POJO implementing the common interface ITriggers
	 */
	public void from(com.intuit.datasource.jooq.information_schema.tables.interfaces.ITriggers from);

	/**
	 * Copy data into another generated Record/POJO implementing the common interface ITriggers
	 */
	public <E extends com.intuit.datasource.jooq.information_schema.tables.interfaces.ITriggers> E into(E into);
}

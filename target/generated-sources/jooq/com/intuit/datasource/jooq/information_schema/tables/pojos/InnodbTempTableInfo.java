/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.pojos;


import com.intuit.datasource.jooq.information_schema.tables.interfaces.IInnodbTempTableInfo;

import javax.annotation.Generated;

import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbTempTableInfo implements IInnodbTempTableInfo {

	private static final long serialVersionUID = 1179499480;

	private ULong    tableId;
	private String   name;
	private UInteger nCols;
	private UInteger space;
	private String   perTableTablespace;
	private String   isCompressed;

	public InnodbTempTableInfo() {}

	public InnodbTempTableInfo(InnodbTempTableInfo value) {
		this.tableId = value.tableId;
		this.name = value.name;
		this.nCols = value.nCols;
		this.space = value.space;
		this.perTableTablespace = value.perTableTablespace;
		this.isCompressed = value.isCompressed;
	}

	public InnodbTempTableInfo(
		ULong    tableId,
		String   name,
		UInteger nCols,
		UInteger space,
		String   perTableTablespace,
		String   isCompressed
	) {
		this.tableId = tableId;
		this.name = name;
		this.nCols = nCols;
		this.space = space;
		this.perTableTablespace = perTableTablespace;
		this.isCompressed = isCompressed;
	}

	@Override
	public ULong getTableId() {
		return this.tableId;
	}

	@Override
	public void setTableId(ULong tableId) {
		this.tableId = tableId;
	}

	@Override
	public String getName() {
		return this.name;
	}

	@Override
	public void setName(String name) {
		this.name = name;
	}

	@Override
	public UInteger getNCols() {
		return this.nCols;
	}

	@Override
	public void setNCols(UInteger nCols) {
		this.nCols = nCols;
	}

	@Override
	public UInteger getSpace() {
		return this.space;
	}

	@Override
	public void setSpace(UInteger space) {
		this.space = space;
	}

	@Override
	public String getPerTableTablespace() {
		return this.perTableTablespace;
	}

	@Override
	public void setPerTableTablespace(String perTableTablespace) {
		this.perTableTablespace = perTableTablespace;
	}

	@Override
	public String getIsCompressed() {
		return this.isCompressed;
	}

	@Override
	public void setIsCompressed(String isCompressed) {
		this.isCompressed = isCompressed;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("InnodbTempTableInfo (");

		sb.append(tableId);
		sb.append(", ").append(name);
		sb.append(", ").append(nCols);
		sb.append(", ").append(space);
		sb.append(", ").append(perTableTablespace);
		sb.append(", ").append(isCompressed);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IInnodbTempTableInfo from) {
		setTableId(from.getTableId());
		setName(from.getName());
		setNCols(from.getNCols());
		setSpace(from.getSpace());
		setPerTableTablespace(from.getPerTableTablespace());
		setIsCompressed(from.getIsCompressed());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IInnodbTempTableInfo> E into(E into) {
		into.from(this);
		return into;
	}
}

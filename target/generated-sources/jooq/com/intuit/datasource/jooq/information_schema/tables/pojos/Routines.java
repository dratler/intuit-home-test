/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.pojos;


import com.intuit.datasource.jooq.information_schema.tables.interfaces.IRoutines;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines implements IRoutines {

	private static final long serialVersionUID = 1280394729;

	private String    specificName;
	private String    routineCatalog;
	private String    routineSchema;
	private String    routineName;
	private String    routineType;
	private String    dataType;
	private Integer   characterMaximumLength;
	private Integer   characterOctetLength;
	private ULong     numericPrecision;
	private Integer   numericScale;
	private ULong     datetimePrecision;
	private String    characterSetName;
	private String    collationName;
	private String    dtdIdentifier;
	private String    routineBody;
	private String    routineDefinition;
	private String    externalName;
	private String    externalLanguage;
	private String    parameterStyle;
	private String    isDeterministic;
	private String    sqlDataAccess;
	private String    sqlPath;
	private String    securityType;
	private Timestamp created;
	private Timestamp lastAltered;
	private String    sqlMode;
	private String    routineComment;
	private String    definer;
	private String    characterSetClient;
	private String    collationConnection;
	private String    databaseCollation;

	public Routines() {}

	public Routines(Routines value) {
		this.specificName = value.specificName;
		this.routineCatalog = value.routineCatalog;
		this.routineSchema = value.routineSchema;
		this.routineName = value.routineName;
		this.routineType = value.routineType;
		this.dataType = value.dataType;
		this.characterMaximumLength = value.characterMaximumLength;
		this.characterOctetLength = value.characterOctetLength;
		this.numericPrecision = value.numericPrecision;
		this.numericScale = value.numericScale;
		this.datetimePrecision = value.datetimePrecision;
		this.characterSetName = value.characterSetName;
		this.collationName = value.collationName;
		this.dtdIdentifier = value.dtdIdentifier;
		this.routineBody = value.routineBody;
		this.routineDefinition = value.routineDefinition;
		this.externalName = value.externalName;
		this.externalLanguage = value.externalLanguage;
		this.parameterStyle = value.parameterStyle;
		this.isDeterministic = value.isDeterministic;
		this.sqlDataAccess = value.sqlDataAccess;
		this.sqlPath = value.sqlPath;
		this.securityType = value.securityType;
		this.created = value.created;
		this.lastAltered = value.lastAltered;
		this.sqlMode = value.sqlMode;
		this.routineComment = value.routineComment;
		this.definer = value.definer;
		this.characterSetClient = value.characterSetClient;
		this.collationConnection = value.collationConnection;
		this.databaseCollation = value.databaseCollation;
	}

	public Routines(
		String    specificName,
		String    routineCatalog,
		String    routineSchema,
		String    routineName,
		String    routineType,
		String    dataType,
		Integer   characterMaximumLength,
		Integer   characterOctetLength,
		ULong     numericPrecision,
		Integer   numericScale,
		ULong     datetimePrecision,
		String    characterSetName,
		String    collationName,
		String    dtdIdentifier,
		String    routineBody,
		String    routineDefinition,
		String    externalName,
		String    externalLanguage,
		String    parameterStyle,
		String    isDeterministic,
		String    sqlDataAccess,
		String    sqlPath,
		String    securityType,
		Timestamp created,
		Timestamp lastAltered,
		String    sqlMode,
		String    routineComment,
		String    definer,
		String    characterSetClient,
		String    collationConnection,
		String    databaseCollation
	) {
		this.specificName = specificName;
		this.routineCatalog = routineCatalog;
		this.routineSchema = routineSchema;
		this.routineName = routineName;
		this.routineType = routineType;
		this.dataType = dataType;
		this.characterMaximumLength = characterMaximumLength;
		this.characterOctetLength = characterOctetLength;
		this.numericPrecision = numericPrecision;
		this.numericScale = numericScale;
		this.datetimePrecision = datetimePrecision;
		this.characterSetName = characterSetName;
		this.collationName = collationName;
		this.dtdIdentifier = dtdIdentifier;
		this.routineBody = routineBody;
		this.routineDefinition = routineDefinition;
		this.externalName = externalName;
		this.externalLanguage = externalLanguage;
		this.parameterStyle = parameterStyle;
		this.isDeterministic = isDeterministic;
		this.sqlDataAccess = sqlDataAccess;
		this.sqlPath = sqlPath;
		this.securityType = securityType;
		this.created = created;
		this.lastAltered = lastAltered;
		this.sqlMode = sqlMode;
		this.routineComment = routineComment;
		this.definer = definer;
		this.characterSetClient = characterSetClient;
		this.collationConnection = collationConnection;
		this.databaseCollation = databaseCollation;
	}

	@Override
	public String getSpecificName() {
		return this.specificName;
	}

	@Override
	public void setSpecificName(String specificName) {
		this.specificName = specificName;
	}

	@Override
	public String getRoutineCatalog() {
		return this.routineCatalog;
	}

	@Override
	public void setRoutineCatalog(String routineCatalog) {
		this.routineCatalog = routineCatalog;
	}

	@Override
	public String getRoutineSchema() {
		return this.routineSchema;
	}

	@Override
	public void setRoutineSchema(String routineSchema) {
		this.routineSchema = routineSchema;
	}

	@Override
	public String getRoutineName() {
		return this.routineName;
	}

	@Override
	public void setRoutineName(String routineName) {
		this.routineName = routineName;
	}

	@Override
	public String getRoutineType() {
		return this.routineType;
	}

	@Override
	public void setRoutineType(String routineType) {
		this.routineType = routineType;
	}

	@Override
	public String getDataType() {
		return this.dataType;
	}

	@Override
	public void setDataType(String dataType) {
		this.dataType = dataType;
	}

	@Override
	public Integer getCharacterMaximumLength() {
		return this.characterMaximumLength;
	}

	@Override
	public void setCharacterMaximumLength(Integer characterMaximumLength) {
		this.characterMaximumLength = characterMaximumLength;
	}

	@Override
	public Integer getCharacterOctetLength() {
		return this.characterOctetLength;
	}

	@Override
	public void setCharacterOctetLength(Integer characterOctetLength) {
		this.characterOctetLength = characterOctetLength;
	}

	@Override
	public ULong getNumericPrecision() {
		return this.numericPrecision;
	}

	@Override
	public void setNumericPrecision(ULong numericPrecision) {
		this.numericPrecision = numericPrecision;
	}

	@Override
	public Integer getNumericScale() {
		return this.numericScale;
	}

	@Override
	public void setNumericScale(Integer numericScale) {
		this.numericScale = numericScale;
	}

	@Override
	public ULong getDatetimePrecision() {
		return this.datetimePrecision;
	}

	@Override
	public void setDatetimePrecision(ULong datetimePrecision) {
		this.datetimePrecision = datetimePrecision;
	}

	@Override
	public String getCharacterSetName() {
		return this.characterSetName;
	}

	@Override
	public void setCharacterSetName(String characterSetName) {
		this.characterSetName = characterSetName;
	}

	@Override
	public String getCollationName() {
		return this.collationName;
	}

	@Override
	public void setCollationName(String collationName) {
		this.collationName = collationName;
	}

	@Override
	public String getDtdIdentifier() {
		return this.dtdIdentifier;
	}

	@Override
	public void setDtdIdentifier(String dtdIdentifier) {
		this.dtdIdentifier = dtdIdentifier;
	}

	@Override
	public String getRoutineBody() {
		return this.routineBody;
	}

	@Override
	public void setRoutineBody(String routineBody) {
		this.routineBody = routineBody;
	}

	@Override
	public String getRoutineDefinition() {
		return this.routineDefinition;
	}

	@Override
	public void setRoutineDefinition(String routineDefinition) {
		this.routineDefinition = routineDefinition;
	}

	@Override
	public String getExternalName() {
		return this.externalName;
	}

	@Override
	public void setExternalName(String externalName) {
		this.externalName = externalName;
	}

	@Override
	public String getExternalLanguage() {
		return this.externalLanguage;
	}

	@Override
	public void setExternalLanguage(String externalLanguage) {
		this.externalLanguage = externalLanguage;
	}

	@Override
	public String getParameterStyle() {
		return this.parameterStyle;
	}

	@Override
	public void setParameterStyle(String parameterStyle) {
		this.parameterStyle = parameterStyle;
	}

	@Override
	public String getIsDeterministic() {
		return this.isDeterministic;
	}

	@Override
	public void setIsDeterministic(String isDeterministic) {
		this.isDeterministic = isDeterministic;
	}

	@Override
	public String getSqlDataAccess() {
		return this.sqlDataAccess;
	}

	@Override
	public void setSqlDataAccess(String sqlDataAccess) {
		this.sqlDataAccess = sqlDataAccess;
	}

	@Override
	public String getSqlPath() {
		return this.sqlPath;
	}

	@Override
	public void setSqlPath(String sqlPath) {
		this.sqlPath = sqlPath;
	}

	@Override
	public String getSecurityType() {
		return this.securityType;
	}

	@Override
	public void setSecurityType(String securityType) {
		this.securityType = securityType;
	}

	@Override
	public Timestamp getCreated() {
		return this.created;
	}

	@Override
	public void setCreated(Timestamp created) {
		this.created = created;
	}

	@Override
	public Timestamp getLastAltered() {
		return this.lastAltered;
	}

	@Override
	public void setLastAltered(Timestamp lastAltered) {
		this.lastAltered = lastAltered;
	}

	@Override
	public String getSqlMode() {
		return this.sqlMode;
	}

	@Override
	public void setSqlMode(String sqlMode) {
		this.sqlMode = sqlMode;
	}

	@Override
	public String getRoutineComment() {
		return this.routineComment;
	}

	@Override
	public void setRoutineComment(String routineComment) {
		this.routineComment = routineComment;
	}

	@Override
	public String getDefiner() {
		return this.definer;
	}

	@Override
	public void setDefiner(String definer) {
		this.definer = definer;
	}

	@Override
	public String getCharacterSetClient() {
		return this.characterSetClient;
	}

	@Override
	public void setCharacterSetClient(String characterSetClient) {
		this.characterSetClient = characterSetClient;
	}

	@Override
	public String getCollationConnection() {
		return this.collationConnection;
	}

	@Override
	public void setCollationConnection(String collationConnection) {
		this.collationConnection = collationConnection;
	}

	@Override
	public String getDatabaseCollation() {
		return this.databaseCollation;
	}

	@Override
	public void setDatabaseCollation(String databaseCollation) {
		this.databaseCollation = databaseCollation;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Routines (");

		sb.append(specificName);
		sb.append(", ").append(routineCatalog);
		sb.append(", ").append(routineSchema);
		sb.append(", ").append(routineName);
		sb.append(", ").append(routineType);
		sb.append(", ").append(dataType);
		sb.append(", ").append(characterMaximumLength);
		sb.append(", ").append(characterOctetLength);
		sb.append(", ").append(numericPrecision);
		sb.append(", ").append(numericScale);
		sb.append(", ").append(datetimePrecision);
		sb.append(", ").append(characterSetName);
		sb.append(", ").append(collationName);
		sb.append(", ").append(dtdIdentifier);
		sb.append(", ").append(routineBody);
		sb.append(", ").append(routineDefinition);
		sb.append(", ").append(externalName);
		sb.append(", ").append(externalLanguage);
		sb.append(", ").append(parameterStyle);
		sb.append(", ").append(isDeterministic);
		sb.append(", ").append(sqlDataAccess);
		sb.append(", ").append(sqlPath);
		sb.append(", ").append(securityType);
		sb.append(", ").append(created);
		sb.append(", ").append(lastAltered);
		sb.append(", ").append(sqlMode);
		sb.append(", ").append(routineComment);
		sb.append(", ").append(definer);
		sb.append(", ").append(characterSetClient);
		sb.append(", ").append(collationConnection);
		sb.append(", ").append(databaseCollation);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IRoutines from) {
		setSpecificName(from.getSpecificName());
		setRoutineCatalog(from.getRoutineCatalog());
		setRoutineSchema(from.getRoutineSchema());
		setRoutineName(from.getRoutineName());
		setRoutineType(from.getRoutineType());
		setDataType(from.getDataType());
		setCharacterMaximumLength(from.getCharacterMaximumLength());
		setCharacterOctetLength(from.getCharacterOctetLength());
		setNumericPrecision(from.getNumericPrecision());
		setNumericScale(from.getNumericScale());
		setDatetimePrecision(from.getDatetimePrecision());
		setCharacterSetName(from.getCharacterSetName());
		setCollationName(from.getCollationName());
		setDtdIdentifier(from.getDtdIdentifier());
		setRoutineBody(from.getRoutineBody());
		setRoutineDefinition(from.getRoutineDefinition());
		setExternalName(from.getExternalName());
		setExternalLanguage(from.getExternalLanguage());
		setParameterStyle(from.getParameterStyle());
		setIsDeterministic(from.getIsDeterministic());
		setSqlDataAccess(from.getSqlDataAccess());
		setSqlPath(from.getSqlPath());
		setSecurityType(from.getSecurityType());
		setCreated(from.getCreated());
		setLastAltered(from.getLastAltered());
		setSqlMode(from.getSqlMode());
		setRoutineComment(from.getRoutineComment());
		setDefiner(from.getDefiner());
		setCharacterSetClient(from.getCharacterSetClient());
		setCollationConnection(from.getCollationConnection());
		setDatabaseCollation(from.getDatabaseCollation());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IRoutines> E into(E into) {
		into.from(this);
		return into;
	}
}

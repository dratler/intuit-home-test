/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.pojos;


import com.intuit.datasource.jooq.information_schema.tables.interfaces.IFiles;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Files implements IFiles {

	private static final long serialVersionUID = 2026946518;

	private Long      fileId;
	private String    fileName;
	private String    fileType;
	private String    tablespaceName;
	private String    tableCatalog;
	private String    tableSchema;
	private String    tableName;
	private String    logfileGroupName;
	private Long      logfileGroupNumber;
	private String    engine;
	private String    fulltextKeys;
	private Long      deletedRows;
	private Long      updateCount;
	private Long      freeExtents;
	private Long      totalExtents;
	private Long      extentSize;
	private ULong     initialSize;
	private ULong     maximumSize;
	private ULong     autoextendSize;
	private Timestamp creationTime;
	private Timestamp lastUpdateTime;
	private Timestamp lastAccessTime;
	private Long      recoverTime;
	private Long      transactionCounter;
	private ULong     version;
	private String    rowFormat;
	private ULong     tableRows;
	private ULong     avgRowLength;
	private ULong     dataLength;
	private ULong     maxDataLength;
	private ULong     indexLength;
	private ULong     dataFree;
	private Timestamp createTime;
	private Timestamp updateTime;
	private Timestamp checkTime;
	private ULong     checksum;
	private String    status;
	private String    extra;

	public Files() {}

	public Files(Files value) {
		this.fileId = value.fileId;
		this.fileName = value.fileName;
		this.fileType = value.fileType;
		this.tablespaceName = value.tablespaceName;
		this.tableCatalog = value.tableCatalog;
		this.tableSchema = value.tableSchema;
		this.tableName = value.tableName;
		this.logfileGroupName = value.logfileGroupName;
		this.logfileGroupNumber = value.logfileGroupNumber;
		this.engine = value.engine;
		this.fulltextKeys = value.fulltextKeys;
		this.deletedRows = value.deletedRows;
		this.updateCount = value.updateCount;
		this.freeExtents = value.freeExtents;
		this.totalExtents = value.totalExtents;
		this.extentSize = value.extentSize;
		this.initialSize = value.initialSize;
		this.maximumSize = value.maximumSize;
		this.autoextendSize = value.autoextendSize;
		this.creationTime = value.creationTime;
		this.lastUpdateTime = value.lastUpdateTime;
		this.lastAccessTime = value.lastAccessTime;
		this.recoverTime = value.recoverTime;
		this.transactionCounter = value.transactionCounter;
		this.version = value.version;
		this.rowFormat = value.rowFormat;
		this.tableRows = value.tableRows;
		this.avgRowLength = value.avgRowLength;
		this.dataLength = value.dataLength;
		this.maxDataLength = value.maxDataLength;
		this.indexLength = value.indexLength;
		this.dataFree = value.dataFree;
		this.createTime = value.createTime;
		this.updateTime = value.updateTime;
		this.checkTime = value.checkTime;
		this.checksum = value.checksum;
		this.status = value.status;
		this.extra = value.extra;
	}

	public Files(
		Long      fileId,
		String    fileName,
		String    fileType,
		String    tablespaceName,
		String    tableCatalog,
		String    tableSchema,
		String    tableName,
		String    logfileGroupName,
		Long      logfileGroupNumber,
		String    engine,
		String    fulltextKeys,
		Long      deletedRows,
		Long      updateCount,
		Long      freeExtents,
		Long      totalExtents,
		Long      extentSize,
		ULong     initialSize,
		ULong     maximumSize,
		ULong     autoextendSize,
		Timestamp creationTime,
		Timestamp lastUpdateTime,
		Timestamp lastAccessTime,
		Long      recoverTime,
		Long      transactionCounter,
		ULong     version,
		String    rowFormat,
		ULong     tableRows,
		ULong     avgRowLength,
		ULong     dataLength,
		ULong     maxDataLength,
		ULong     indexLength,
		ULong     dataFree,
		Timestamp createTime,
		Timestamp updateTime,
		Timestamp checkTime,
		ULong     checksum,
		String    status,
		String    extra
	) {
		this.fileId = fileId;
		this.fileName = fileName;
		this.fileType = fileType;
		this.tablespaceName = tablespaceName;
		this.tableCatalog = tableCatalog;
		this.tableSchema = tableSchema;
		this.tableName = tableName;
		this.logfileGroupName = logfileGroupName;
		this.logfileGroupNumber = logfileGroupNumber;
		this.engine = engine;
		this.fulltextKeys = fulltextKeys;
		this.deletedRows = deletedRows;
		this.updateCount = updateCount;
		this.freeExtents = freeExtents;
		this.totalExtents = totalExtents;
		this.extentSize = extentSize;
		this.initialSize = initialSize;
		this.maximumSize = maximumSize;
		this.autoextendSize = autoextendSize;
		this.creationTime = creationTime;
		this.lastUpdateTime = lastUpdateTime;
		this.lastAccessTime = lastAccessTime;
		this.recoverTime = recoverTime;
		this.transactionCounter = transactionCounter;
		this.version = version;
		this.rowFormat = rowFormat;
		this.tableRows = tableRows;
		this.avgRowLength = avgRowLength;
		this.dataLength = dataLength;
		this.maxDataLength = maxDataLength;
		this.indexLength = indexLength;
		this.dataFree = dataFree;
		this.createTime = createTime;
		this.updateTime = updateTime;
		this.checkTime = checkTime;
		this.checksum = checksum;
		this.status = status;
		this.extra = extra;
	}

	@Override
	public Long getFileId() {
		return this.fileId;
	}

	@Override
	public void setFileId(Long fileId) {
		this.fileId = fileId;
	}

	@Override
	public String getFileName() {
		return this.fileName;
	}

	@Override
	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	@Override
	public String getFileType() {
		return this.fileType;
	}

	@Override
	public void setFileType(String fileType) {
		this.fileType = fileType;
	}

	@Override
	public String getTablespaceName() {
		return this.tablespaceName;
	}

	@Override
	public void setTablespaceName(String tablespaceName) {
		this.tablespaceName = tablespaceName;
	}

	@Override
	public String getTableCatalog() {
		return this.tableCatalog;
	}

	@Override
	public void setTableCatalog(String tableCatalog) {
		this.tableCatalog = tableCatalog;
	}

	@Override
	public String getTableSchema() {
		return this.tableSchema;
	}

	@Override
	public void setTableSchema(String tableSchema) {
		this.tableSchema = tableSchema;
	}

	@Override
	public String getTableName() {
		return this.tableName;
	}

	@Override
	public void setTableName(String tableName) {
		this.tableName = tableName;
	}

	@Override
	public String getLogfileGroupName() {
		return this.logfileGroupName;
	}

	@Override
	public void setLogfileGroupName(String logfileGroupName) {
		this.logfileGroupName = logfileGroupName;
	}

	@Override
	public Long getLogfileGroupNumber() {
		return this.logfileGroupNumber;
	}

	@Override
	public void setLogfileGroupNumber(Long logfileGroupNumber) {
		this.logfileGroupNumber = logfileGroupNumber;
	}

	@Override
	public String getEngine() {
		return this.engine;
	}

	@Override
	public void setEngine(String engine) {
		this.engine = engine;
	}

	@Override
	public String getFulltextKeys() {
		return this.fulltextKeys;
	}

	@Override
	public void setFulltextKeys(String fulltextKeys) {
		this.fulltextKeys = fulltextKeys;
	}

	@Override
	public Long getDeletedRows() {
		return this.deletedRows;
	}

	@Override
	public void setDeletedRows(Long deletedRows) {
		this.deletedRows = deletedRows;
	}

	@Override
	public Long getUpdateCount() {
		return this.updateCount;
	}

	@Override
	public void setUpdateCount(Long updateCount) {
		this.updateCount = updateCount;
	}

	@Override
	public Long getFreeExtents() {
		return this.freeExtents;
	}

	@Override
	public void setFreeExtents(Long freeExtents) {
		this.freeExtents = freeExtents;
	}

	@Override
	public Long getTotalExtents() {
		return this.totalExtents;
	}

	@Override
	public void setTotalExtents(Long totalExtents) {
		this.totalExtents = totalExtents;
	}

	@Override
	public Long getExtentSize() {
		return this.extentSize;
	}

	@Override
	public void setExtentSize(Long extentSize) {
		this.extentSize = extentSize;
	}

	@Override
	public ULong getInitialSize() {
		return this.initialSize;
	}

	@Override
	public void setInitialSize(ULong initialSize) {
		this.initialSize = initialSize;
	}

	@Override
	public ULong getMaximumSize() {
		return this.maximumSize;
	}

	@Override
	public void setMaximumSize(ULong maximumSize) {
		this.maximumSize = maximumSize;
	}

	@Override
	public ULong getAutoextendSize() {
		return this.autoextendSize;
	}

	@Override
	public void setAutoextendSize(ULong autoextendSize) {
		this.autoextendSize = autoextendSize;
	}

	@Override
	public Timestamp getCreationTime() {
		return this.creationTime;
	}

	@Override
	public void setCreationTime(Timestamp creationTime) {
		this.creationTime = creationTime;
	}

	@Override
	public Timestamp getLastUpdateTime() {
		return this.lastUpdateTime;
	}

	@Override
	public void setLastUpdateTime(Timestamp lastUpdateTime) {
		this.lastUpdateTime = lastUpdateTime;
	}

	@Override
	public Timestamp getLastAccessTime() {
		return this.lastAccessTime;
	}

	@Override
	public void setLastAccessTime(Timestamp lastAccessTime) {
		this.lastAccessTime = lastAccessTime;
	}

	@Override
	public Long getRecoverTime() {
		return this.recoverTime;
	}

	@Override
	public void setRecoverTime(Long recoverTime) {
		this.recoverTime = recoverTime;
	}

	@Override
	public Long getTransactionCounter() {
		return this.transactionCounter;
	}

	@Override
	public void setTransactionCounter(Long transactionCounter) {
		this.transactionCounter = transactionCounter;
	}

	@Override
	public ULong getVersion() {
		return this.version;
	}

	@Override
	public void setVersion(ULong version) {
		this.version = version;
	}

	@Override
	public String getRowFormat() {
		return this.rowFormat;
	}

	@Override
	public void setRowFormat(String rowFormat) {
		this.rowFormat = rowFormat;
	}

	@Override
	public ULong getTableRows() {
		return this.tableRows;
	}

	@Override
	public void setTableRows(ULong tableRows) {
		this.tableRows = tableRows;
	}

	@Override
	public ULong getAvgRowLength() {
		return this.avgRowLength;
	}

	@Override
	public void setAvgRowLength(ULong avgRowLength) {
		this.avgRowLength = avgRowLength;
	}

	@Override
	public ULong getDataLength() {
		return this.dataLength;
	}

	@Override
	public void setDataLength(ULong dataLength) {
		this.dataLength = dataLength;
	}

	@Override
	public ULong getMaxDataLength() {
		return this.maxDataLength;
	}

	@Override
	public void setMaxDataLength(ULong maxDataLength) {
		this.maxDataLength = maxDataLength;
	}

	@Override
	public ULong getIndexLength() {
		return this.indexLength;
	}

	@Override
	public void setIndexLength(ULong indexLength) {
		this.indexLength = indexLength;
	}

	@Override
	public ULong getDataFree() {
		return this.dataFree;
	}

	@Override
	public void setDataFree(ULong dataFree) {
		this.dataFree = dataFree;
	}

	@Override
	public Timestamp getCreateTime() {
		return this.createTime;
	}

	@Override
	public void setCreateTime(Timestamp createTime) {
		this.createTime = createTime;
	}

	@Override
	public Timestamp getUpdateTime() {
		return this.updateTime;
	}

	@Override
	public void setUpdateTime(Timestamp updateTime) {
		this.updateTime = updateTime;
	}

	@Override
	public Timestamp getCheckTime() {
		return this.checkTime;
	}

	@Override
	public void setCheckTime(Timestamp checkTime) {
		this.checkTime = checkTime;
	}

	@Override
	public ULong getChecksum() {
		return this.checksum;
	}

	@Override
	public void setChecksum(ULong checksum) {
		this.checksum = checksum;
	}

	@Override
	public String getStatus() {
		return this.status;
	}

	@Override
	public void setStatus(String status) {
		this.status = status;
	}

	@Override
	public String getExtra() {
		return this.extra;
	}

	@Override
	public void setExtra(String extra) {
		this.extra = extra;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Files (");

		sb.append(fileId);
		sb.append(", ").append(fileName);
		sb.append(", ").append(fileType);
		sb.append(", ").append(tablespaceName);
		sb.append(", ").append(tableCatalog);
		sb.append(", ").append(tableSchema);
		sb.append(", ").append(tableName);
		sb.append(", ").append(logfileGroupName);
		sb.append(", ").append(logfileGroupNumber);
		sb.append(", ").append(engine);
		sb.append(", ").append(fulltextKeys);
		sb.append(", ").append(deletedRows);
		sb.append(", ").append(updateCount);
		sb.append(", ").append(freeExtents);
		sb.append(", ").append(totalExtents);
		sb.append(", ").append(extentSize);
		sb.append(", ").append(initialSize);
		sb.append(", ").append(maximumSize);
		sb.append(", ").append(autoextendSize);
		sb.append(", ").append(creationTime);
		sb.append(", ").append(lastUpdateTime);
		sb.append(", ").append(lastAccessTime);
		sb.append(", ").append(recoverTime);
		sb.append(", ").append(transactionCounter);
		sb.append(", ").append(version);
		sb.append(", ").append(rowFormat);
		sb.append(", ").append(tableRows);
		sb.append(", ").append(avgRowLength);
		sb.append(", ").append(dataLength);
		sb.append(", ").append(maxDataLength);
		sb.append(", ").append(indexLength);
		sb.append(", ").append(dataFree);
		sb.append(", ").append(createTime);
		sb.append(", ").append(updateTime);
		sb.append(", ").append(checkTime);
		sb.append(", ").append(checksum);
		sb.append(", ").append(status);
		sb.append(", ").append(extra);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IFiles from) {
		setFileId(from.getFileId());
		setFileName(from.getFileName());
		setFileType(from.getFileType());
		setTablespaceName(from.getTablespaceName());
		setTableCatalog(from.getTableCatalog());
		setTableSchema(from.getTableSchema());
		setTableName(from.getTableName());
		setLogfileGroupName(from.getLogfileGroupName());
		setLogfileGroupNumber(from.getLogfileGroupNumber());
		setEngine(from.getEngine());
		setFulltextKeys(from.getFulltextKeys());
		setDeletedRows(from.getDeletedRows());
		setUpdateCount(from.getUpdateCount());
		setFreeExtents(from.getFreeExtents());
		setTotalExtents(from.getTotalExtents());
		setExtentSize(from.getExtentSize());
		setInitialSize(from.getInitialSize());
		setMaximumSize(from.getMaximumSize());
		setAutoextendSize(from.getAutoextendSize());
		setCreationTime(from.getCreationTime());
		setLastUpdateTime(from.getLastUpdateTime());
		setLastAccessTime(from.getLastAccessTime());
		setRecoverTime(from.getRecoverTime());
		setTransactionCounter(from.getTransactionCounter());
		setVersion(from.getVersion());
		setRowFormat(from.getRowFormat());
		setTableRows(from.getTableRows());
		setAvgRowLength(from.getAvgRowLength());
		setDataLength(from.getDataLength());
		setMaxDataLength(from.getMaxDataLength());
		setIndexLength(from.getIndexLength());
		setDataFree(from.getDataFree());
		setCreateTime(from.getCreateTime());
		setUpdateTime(from.getUpdateTime());
		setCheckTime(from.getCheckTime());
		setChecksum(from.getChecksum());
		setStatus(from.getStatus());
		setExtra(from.getExtra());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IFiles> E into(E into) {
		into.from(this);
		return into;
	}
}

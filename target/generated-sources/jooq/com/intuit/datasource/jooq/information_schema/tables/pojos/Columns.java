/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.pojos;


import com.intuit.datasource.jooq.information_schema.tables.interfaces.IColumns;

import javax.annotation.Generated;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Columns implements IColumns {

	private static final long serialVersionUID = -977407920;

	private String tableCatalog;
	private String tableSchema;
	private String tableName;
	private String columnName;
	private ULong  ordinalPosition;
	private String columnDefault;
	private String isNullable;
	private String dataType;
	private ULong  characterMaximumLength;
	private ULong  characterOctetLength;
	private ULong  numericPrecision;
	private ULong  numericScale;
	private ULong  datetimePrecision;
	private String characterSetName;
	private String collationName;
	private String columnType;
	private String columnKey;
	private String extra;
	private String privileges;
	private String columnComment;
	private String generationExpression;

	public Columns() {}

	public Columns(Columns value) {
		this.tableCatalog = value.tableCatalog;
		this.tableSchema = value.tableSchema;
		this.tableName = value.tableName;
		this.columnName = value.columnName;
		this.ordinalPosition = value.ordinalPosition;
		this.columnDefault = value.columnDefault;
		this.isNullable = value.isNullable;
		this.dataType = value.dataType;
		this.characterMaximumLength = value.characterMaximumLength;
		this.characterOctetLength = value.characterOctetLength;
		this.numericPrecision = value.numericPrecision;
		this.numericScale = value.numericScale;
		this.datetimePrecision = value.datetimePrecision;
		this.characterSetName = value.characterSetName;
		this.collationName = value.collationName;
		this.columnType = value.columnType;
		this.columnKey = value.columnKey;
		this.extra = value.extra;
		this.privileges = value.privileges;
		this.columnComment = value.columnComment;
		this.generationExpression = value.generationExpression;
	}

	public Columns(
		String tableCatalog,
		String tableSchema,
		String tableName,
		String columnName,
		ULong  ordinalPosition,
		String columnDefault,
		String isNullable,
		String dataType,
		ULong  characterMaximumLength,
		ULong  characterOctetLength,
		ULong  numericPrecision,
		ULong  numericScale,
		ULong  datetimePrecision,
		String characterSetName,
		String collationName,
		String columnType,
		String columnKey,
		String extra,
		String privileges,
		String columnComment,
		String generationExpression
	) {
		this.tableCatalog = tableCatalog;
		this.tableSchema = tableSchema;
		this.tableName = tableName;
		this.columnName = columnName;
		this.ordinalPosition = ordinalPosition;
		this.columnDefault = columnDefault;
		this.isNullable = isNullable;
		this.dataType = dataType;
		this.characterMaximumLength = characterMaximumLength;
		this.characterOctetLength = characterOctetLength;
		this.numericPrecision = numericPrecision;
		this.numericScale = numericScale;
		this.datetimePrecision = datetimePrecision;
		this.characterSetName = characterSetName;
		this.collationName = collationName;
		this.columnType = columnType;
		this.columnKey = columnKey;
		this.extra = extra;
		this.privileges = privileges;
		this.columnComment = columnComment;
		this.generationExpression = generationExpression;
	}

	@Override
	public String getTableCatalog() {
		return this.tableCatalog;
	}

	@Override
	public void setTableCatalog(String tableCatalog) {
		this.tableCatalog = tableCatalog;
	}

	@Override
	public String getTableSchema() {
		return this.tableSchema;
	}

	@Override
	public void setTableSchema(String tableSchema) {
		this.tableSchema = tableSchema;
	}

	@Override
	public String getTableName() {
		return this.tableName;
	}

	@Override
	public void setTableName(String tableName) {
		this.tableName = tableName;
	}

	@Override
	public String getColumnName() {
		return this.columnName;
	}

	@Override
	public void setColumnName(String columnName) {
		this.columnName = columnName;
	}

	@Override
	public ULong getOrdinalPosition() {
		return this.ordinalPosition;
	}

	@Override
	public void setOrdinalPosition(ULong ordinalPosition) {
		this.ordinalPosition = ordinalPosition;
	}

	@Override
	public String getColumnDefault() {
		return this.columnDefault;
	}

	@Override
	public void setColumnDefault(String columnDefault) {
		this.columnDefault = columnDefault;
	}

	@Override
	public String getIsNullable() {
		return this.isNullable;
	}

	@Override
	public void setIsNullable(String isNullable) {
		this.isNullable = isNullable;
	}

	@Override
	public String getDataType() {
		return this.dataType;
	}

	@Override
	public void setDataType(String dataType) {
		this.dataType = dataType;
	}

	@Override
	public ULong getCharacterMaximumLength() {
		return this.characterMaximumLength;
	}

	@Override
	public void setCharacterMaximumLength(ULong characterMaximumLength) {
		this.characterMaximumLength = characterMaximumLength;
	}

	@Override
	public ULong getCharacterOctetLength() {
		return this.characterOctetLength;
	}

	@Override
	public void setCharacterOctetLength(ULong characterOctetLength) {
		this.characterOctetLength = characterOctetLength;
	}

	@Override
	public ULong getNumericPrecision() {
		return this.numericPrecision;
	}

	@Override
	public void setNumericPrecision(ULong numericPrecision) {
		this.numericPrecision = numericPrecision;
	}

	@Override
	public ULong getNumericScale() {
		return this.numericScale;
	}

	@Override
	public void setNumericScale(ULong numericScale) {
		this.numericScale = numericScale;
	}

	@Override
	public ULong getDatetimePrecision() {
		return this.datetimePrecision;
	}

	@Override
	public void setDatetimePrecision(ULong datetimePrecision) {
		this.datetimePrecision = datetimePrecision;
	}

	@Override
	public String getCharacterSetName() {
		return this.characterSetName;
	}

	@Override
	public void setCharacterSetName(String characterSetName) {
		this.characterSetName = characterSetName;
	}

	@Override
	public String getCollationName() {
		return this.collationName;
	}

	@Override
	public void setCollationName(String collationName) {
		this.collationName = collationName;
	}

	@Override
	public String getColumnType() {
		return this.columnType;
	}

	@Override
	public void setColumnType(String columnType) {
		this.columnType = columnType;
	}

	@Override
	public String getColumnKey() {
		return this.columnKey;
	}

	@Override
	public void setColumnKey(String columnKey) {
		this.columnKey = columnKey;
	}

	@Override
	public String getExtra() {
		return this.extra;
	}

	@Override
	public void setExtra(String extra) {
		this.extra = extra;
	}

	@Override
	public String getPrivileges() {
		return this.privileges;
	}

	@Override
	public void setPrivileges(String privileges) {
		this.privileges = privileges;
	}

	@Override
	public String getColumnComment() {
		return this.columnComment;
	}

	@Override
	public void setColumnComment(String columnComment) {
		this.columnComment = columnComment;
	}

	@Override
	public String getGenerationExpression() {
		return this.generationExpression;
	}

	@Override
	public void setGenerationExpression(String generationExpression) {
		this.generationExpression = generationExpression;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Columns (");

		sb.append(tableCatalog);
		sb.append(", ").append(tableSchema);
		sb.append(", ").append(tableName);
		sb.append(", ").append(columnName);
		sb.append(", ").append(ordinalPosition);
		sb.append(", ").append(columnDefault);
		sb.append(", ").append(isNullable);
		sb.append(", ").append(dataType);
		sb.append(", ").append(characterMaximumLength);
		sb.append(", ").append(characterOctetLength);
		sb.append(", ").append(numericPrecision);
		sb.append(", ").append(numericScale);
		sb.append(", ").append(datetimePrecision);
		sb.append(", ").append(characterSetName);
		sb.append(", ").append(collationName);
		sb.append(", ").append(columnType);
		sb.append(", ").append(columnKey);
		sb.append(", ").append(extra);
		sb.append(", ").append(privileges);
		sb.append(", ").append(columnComment);
		sb.append(", ").append(generationExpression);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IColumns from) {
		setTableCatalog(from.getTableCatalog());
		setTableSchema(from.getTableSchema());
		setTableName(from.getTableName());
		setColumnName(from.getColumnName());
		setOrdinalPosition(from.getOrdinalPosition());
		setColumnDefault(from.getColumnDefault());
		setIsNullable(from.getIsNullable());
		setDataType(from.getDataType());
		setCharacterMaximumLength(from.getCharacterMaximumLength());
		setCharacterOctetLength(from.getCharacterOctetLength());
		setNumericPrecision(from.getNumericPrecision());
		setNumericScale(from.getNumericScale());
		setDatetimePrecision(from.getDatetimePrecision());
		setCharacterSetName(from.getCharacterSetName());
		setCollationName(from.getCollationName());
		setColumnType(from.getColumnType());
		setColumnKey(from.getColumnKey());
		setExtra(from.getExtra());
		setPrivileges(from.getPrivileges());
		setColumnComment(from.getColumnComment());
		setGenerationExpression(from.getGenerationExpression());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IColumns> E into(E into) {
		into.from(this);
		return into;
	}
}

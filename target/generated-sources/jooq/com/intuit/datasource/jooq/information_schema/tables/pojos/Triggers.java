/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.pojos;


import com.intuit.datasource.jooq.information_schema.tables.interfaces.ITriggers;

import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Triggers implements ITriggers {

	private static final long serialVersionUID = 1731051639;

	private String    triggerCatalog;
	private String    triggerSchema;
	private String    triggerName;
	private String    eventManipulation;
	private String    eventObjectCatalog;
	private String    eventObjectSchema;
	private String    eventObjectTable;
	private Long      actionOrder;
	private String    actionCondition;
	private String    actionStatement;
	private String    actionOrientation;
	private String    actionTiming;
	private String    actionReferenceOldTable;
	private String    actionReferenceNewTable;
	private String    actionReferenceOldRow;
	private String    actionReferenceNewRow;
	private Timestamp created;
	private String    sqlMode;
	private String    definer;
	private String    characterSetClient;
	private String    collationConnection;
	private String    databaseCollation;

	public Triggers() {}

	public Triggers(Triggers value) {
		this.triggerCatalog = value.triggerCatalog;
		this.triggerSchema = value.triggerSchema;
		this.triggerName = value.triggerName;
		this.eventManipulation = value.eventManipulation;
		this.eventObjectCatalog = value.eventObjectCatalog;
		this.eventObjectSchema = value.eventObjectSchema;
		this.eventObjectTable = value.eventObjectTable;
		this.actionOrder = value.actionOrder;
		this.actionCondition = value.actionCondition;
		this.actionStatement = value.actionStatement;
		this.actionOrientation = value.actionOrientation;
		this.actionTiming = value.actionTiming;
		this.actionReferenceOldTable = value.actionReferenceOldTable;
		this.actionReferenceNewTable = value.actionReferenceNewTable;
		this.actionReferenceOldRow = value.actionReferenceOldRow;
		this.actionReferenceNewRow = value.actionReferenceNewRow;
		this.created = value.created;
		this.sqlMode = value.sqlMode;
		this.definer = value.definer;
		this.characterSetClient = value.characterSetClient;
		this.collationConnection = value.collationConnection;
		this.databaseCollation = value.databaseCollation;
	}

	public Triggers(
		String    triggerCatalog,
		String    triggerSchema,
		String    triggerName,
		String    eventManipulation,
		String    eventObjectCatalog,
		String    eventObjectSchema,
		String    eventObjectTable,
		Long      actionOrder,
		String    actionCondition,
		String    actionStatement,
		String    actionOrientation,
		String    actionTiming,
		String    actionReferenceOldTable,
		String    actionReferenceNewTable,
		String    actionReferenceOldRow,
		String    actionReferenceNewRow,
		Timestamp created,
		String    sqlMode,
		String    definer,
		String    characterSetClient,
		String    collationConnection,
		String    databaseCollation
	) {
		this.triggerCatalog = triggerCatalog;
		this.triggerSchema = triggerSchema;
		this.triggerName = triggerName;
		this.eventManipulation = eventManipulation;
		this.eventObjectCatalog = eventObjectCatalog;
		this.eventObjectSchema = eventObjectSchema;
		this.eventObjectTable = eventObjectTable;
		this.actionOrder = actionOrder;
		this.actionCondition = actionCondition;
		this.actionStatement = actionStatement;
		this.actionOrientation = actionOrientation;
		this.actionTiming = actionTiming;
		this.actionReferenceOldTable = actionReferenceOldTable;
		this.actionReferenceNewTable = actionReferenceNewTable;
		this.actionReferenceOldRow = actionReferenceOldRow;
		this.actionReferenceNewRow = actionReferenceNewRow;
		this.created = created;
		this.sqlMode = sqlMode;
		this.definer = definer;
		this.characterSetClient = characterSetClient;
		this.collationConnection = collationConnection;
		this.databaseCollation = databaseCollation;
	}

	@Override
	public String getTriggerCatalog() {
		return this.triggerCatalog;
	}

	@Override
	public void setTriggerCatalog(String triggerCatalog) {
		this.triggerCatalog = triggerCatalog;
	}

	@Override
	public String getTriggerSchema() {
		return this.triggerSchema;
	}

	@Override
	public void setTriggerSchema(String triggerSchema) {
		this.triggerSchema = triggerSchema;
	}

	@Override
	public String getTriggerName() {
		return this.triggerName;
	}

	@Override
	public void setTriggerName(String triggerName) {
		this.triggerName = triggerName;
	}

	@Override
	public String getEventManipulation() {
		return this.eventManipulation;
	}

	@Override
	public void setEventManipulation(String eventManipulation) {
		this.eventManipulation = eventManipulation;
	}

	@Override
	public String getEventObjectCatalog() {
		return this.eventObjectCatalog;
	}

	@Override
	public void setEventObjectCatalog(String eventObjectCatalog) {
		this.eventObjectCatalog = eventObjectCatalog;
	}

	@Override
	public String getEventObjectSchema() {
		return this.eventObjectSchema;
	}

	@Override
	public void setEventObjectSchema(String eventObjectSchema) {
		this.eventObjectSchema = eventObjectSchema;
	}

	@Override
	public String getEventObjectTable() {
		return this.eventObjectTable;
	}

	@Override
	public void setEventObjectTable(String eventObjectTable) {
		this.eventObjectTable = eventObjectTable;
	}

	@Override
	public Long getActionOrder() {
		return this.actionOrder;
	}

	@Override
	public void setActionOrder(Long actionOrder) {
		this.actionOrder = actionOrder;
	}

	@Override
	public String getActionCondition() {
		return this.actionCondition;
	}

	@Override
	public void setActionCondition(String actionCondition) {
		this.actionCondition = actionCondition;
	}

	@Override
	public String getActionStatement() {
		return this.actionStatement;
	}

	@Override
	public void setActionStatement(String actionStatement) {
		this.actionStatement = actionStatement;
	}

	@Override
	public String getActionOrientation() {
		return this.actionOrientation;
	}

	@Override
	public void setActionOrientation(String actionOrientation) {
		this.actionOrientation = actionOrientation;
	}

	@Override
	public String getActionTiming() {
		return this.actionTiming;
	}

	@Override
	public void setActionTiming(String actionTiming) {
		this.actionTiming = actionTiming;
	}

	@Override
	public String getActionReferenceOldTable() {
		return this.actionReferenceOldTable;
	}

	@Override
	public void setActionReferenceOldTable(String actionReferenceOldTable) {
		this.actionReferenceOldTable = actionReferenceOldTable;
	}

	@Override
	public String getActionReferenceNewTable() {
		return this.actionReferenceNewTable;
	}

	@Override
	public void setActionReferenceNewTable(String actionReferenceNewTable) {
		this.actionReferenceNewTable = actionReferenceNewTable;
	}

	@Override
	public String getActionReferenceOldRow() {
		return this.actionReferenceOldRow;
	}

	@Override
	public void setActionReferenceOldRow(String actionReferenceOldRow) {
		this.actionReferenceOldRow = actionReferenceOldRow;
	}

	@Override
	public String getActionReferenceNewRow() {
		return this.actionReferenceNewRow;
	}

	@Override
	public void setActionReferenceNewRow(String actionReferenceNewRow) {
		this.actionReferenceNewRow = actionReferenceNewRow;
	}

	@Override
	public Timestamp getCreated() {
		return this.created;
	}

	@Override
	public void setCreated(Timestamp created) {
		this.created = created;
	}

	@Override
	public String getSqlMode() {
		return this.sqlMode;
	}

	@Override
	public void setSqlMode(String sqlMode) {
		this.sqlMode = sqlMode;
	}

	@Override
	public String getDefiner() {
		return this.definer;
	}

	@Override
	public void setDefiner(String definer) {
		this.definer = definer;
	}

	@Override
	public String getCharacterSetClient() {
		return this.characterSetClient;
	}

	@Override
	public void setCharacterSetClient(String characterSetClient) {
		this.characterSetClient = characterSetClient;
	}

	@Override
	public String getCollationConnection() {
		return this.collationConnection;
	}

	@Override
	public void setCollationConnection(String collationConnection) {
		this.collationConnection = collationConnection;
	}

	@Override
	public String getDatabaseCollation() {
		return this.databaseCollation;
	}

	@Override
	public void setDatabaseCollation(String databaseCollation) {
		this.databaseCollation = databaseCollation;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Triggers (");

		sb.append(triggerCatalog);
		sb.append(", ").append(triggerSchema);
		sb.append(", ").append(triggerName);
		sb.append(", ").append(eventManipulation);
		sb.append(", ").append(eventObjectCatalog);
		sb.append(", ").append(eventObjectSchema);
		sb.append(", ").append(eventObjectTable);
		sb.append(", ").append(actionOrder);
		sb.append(", ").append(actionCondition);
		sb.append(", ").append(actionStatement);
		sb.append(", ").append(actionOrientation);
		sb.append(", ").append(actionTiming);
		sb.append(", ").append(actionReferenceOldTable);
		sb.append(", ").append(actionReferenceNewTable);
		sb.append(", ").append(actionReferenceOldRow);
		sb.append(", ").append(actionReferenceNewRow);
		sb.append(", ").append(created);
		sb.append(", ").append(sqlMode);
		sb.append(", ").append(definer);
		sb.append(", ").append(characterSetClient);
		sb.append(", ").append(collationConnection);
		sb.append(", ").append(databaseCollation);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITriggers from) {
		setTriggerCatalog(from.getTriggerCatalog());
		setTriggerSchema(from.getTriggerSchema());
		setTriggerName(from.getTriggerName());
		setEventManipulation(from.getEventManipulation());
		setEventObjectCatalog(from.getEventObjectCatalog());
		setEventObjectSchema(from.getEventObjectSchema());
		setEventObjectTable(from.getEventObjectTable());
		setActionOrder(from.getActionOrder());
		setActionCondition(from.getActionCondition());
		setActionStatement(from.getActionStatement());
		setActionOrientation(from.getActionOrientation());
		setActionTiming(from.getActionTiming());
		setActionReferenceOldTable(from.getActionReferenceOldTable());
		setActionReferenceNewTable(from.getActionReferenceNewTable());
		setActionReferenceOldRow(from.getActionReferenceOldRow());
		setActionReferenceNewRow(from.getActionReferenceNewRow());
		setCreated(from.getCreated());
		setSqlMode(from.getSqlMode());
		setDefiner(from.getDefiner());
		setCharacterSetClient(from.getCharacterSetClient());
		setCollationConnection(from.getCollationConnection());
		setDatabaseCollation(from.getDatabaseCollation());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITriggers> E into(E into) {
		into.from(this);
		return into;
	}
}

/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.pojos;


import com.intuit.datasource.jooq.information_schema.tables.interfaces.IPlugins;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Plugins implements IPlugins {

	private static final long serialVersionUID = -1251391559;

	private String pluginName;
	private String pluginVersion;
	private String pluginStatus;
	private String pluginType;
	private String pluginTypeVersion;
	private String pluginLibrary;
	private String pluginLibraryVersion;
	private String pluginAuthor;
	private String pluginDescription;
	private String pluginLicense;
	private String loadOption;

	public Plugins() {}

	public Plugins(Plugins value) {
		this.pluginName = value.pluginName;
		this.pluginVersion = value.pluginVersion;
		this.pluginStatus = value.pluginStatus;
		this.pluginType = value.pluginType;
		this.pluginTypeVersion = value.pluginTypeVersion;
		this.pluginLibrary = value.pluginLibrary;
		this.pluginLibraryVersion = value.pluginLibraryVersion;
		this.pluginAuthor = value.pluginAuthor;
		this.pluginDescription = value.pluginDescription;
		this.pluginLicense = value.pluginLicense;
		this.loadOption = value.loadOption;
	}

	public Plugins(
		String pluginName,
		String pluginVersion,
		String pluginStatus,
		String pluginType,
		String pluginTypeVersion,
		String pluginLibrary,
		String pluginLibraryVersion,
		String pluginAuthor,
		String pluginDescription,
		String pluginLicense,
		String loadOption
	) {
		this.pluginName = pluginName;
		this.pluginVersion = pluginVersion;
		this.pluginStatus = pluginStatus;
		this.pluginType = pluginType;
		this.pluginTypeVersion = pluginTypeVersion;
		this.pluginLibrary = pluginLibrary;
		this.pluginLibraryVersion = pluginLibraryVersion;
		this.pluginAuthor = pluginAuthor;
		this.pluginDescription = pluginDescription;
		this.pluginLicense = pluginLicense;
		this.loadOption = loadOption;
	}

	@Override
	public String getPluginName() {
		return this.pluginName;
	}

	@Override
	public void setPluginName(String pluginName) {
		this.pluginName = pluginName;
	}

	@Override
	public String getPluginVersion() {
		return this.pluginVersion;
	}

	@Override
	public void setPluginVersion(String pluginVersion) {
		this.pluginVersion = pluginVersion;
	}

	@Override
	public String getPluginStatus() {
		return this.pluginStatus;
	}

	@Override
	public void setPluginStatus(String pluginStatus) {
		this.pluginStatus = pluginStatus;
	}

	@Override
	public String getPluginType() {
		return this.pluginType;
	}

	@Override
	public void setPluginType(String pluginType) {
		this.pluginType = pluginType;
	}

	@Override
	public String getPluginTypeVersion() {
		return this.pluginTypeVersion;
	}

	@Override
	public void setPluginTypeVersion(String pluginTypeVersion) {
		this.pluginTypeVersion = pluginTypeVersion;
	}

	@Override
	public String getPluginLibrary() {
		return this.pluginLibrary;
	}

	@Override
	public void setPluginLibrary(String pluginLibrary) {
		this.pluginLibrary = pluginLibrary;
	}

	@Override
	public String getPluginLibraryVersion() {
		return this.pluginLibraryVersion;
	}

	@Override
	public void setPluginLibraryVersion(String pluginLibraryVersion) {
		this.pluginLibraryVersion = pluginLibraryVersion;
	}

	@Override
	public String getPluginAuthor() {
		return this.pluginAuthor;
	}

	@Override
	public void setPluginAuthor(String pluginAuthor) {
		this.pluginAuthor = pluginAuthor;
	}

	@Override
	public String getPluginDescription() {
		return this.pluginDescription;
	}

	@Override
	public void setPluginDescription(String pluginDescription) {
		this.pluginDescription = pluginDescription;
	}

	@Override
	public String getPluginLicense() {
		return this.pluginLicense;
	}

	@Override
	public void setPluginLicense(String pluginLicense) {
		this.pluginLicense = pluginLicense;
	}

	@Override
	public String getLoadOption() {
		return this.loadOption;
	}

	@Override
	public void setLoadOption(String loadOption) {
		this.loadOption = loadOption;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Plugins (");

		sb.append(pluginName);
		sb.append(", ").append(pluginVersion);
		sb.append(", ").append(pluginStatus);
		sb.append(", ").append(pluginType);
		sb.append(", ").append(pluginTypeVersion);
		sb.append(", ").append(pluginLibrary);
		sb.append(", ").append(pluginLibraryVersion);
		sb.append(", ").append(pluginAuthor);
		sb.append(", ").append(pluginDescription);
		sb.append(", ").append(pluginLicense);
		sb.append(", ").append(loadOption);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IPlugins from) {
		setPluginName(from.getPluginName());
		setPluginVersion(from.getPluginVersion());
		setPluginStatus(from.getPluginStatus());
		setPluginType(from.getPluginType());
		setPluginTypeVersion(from.getPluginTypeVersion());
		setPluginLibrary(from.getPluginLibrary());
		setPluginLibraryVersion(from.getPluginLibraryVersion());
		setPluginAuthor(from.getPluginAuthor());
		setPluginDescription(from.getPluginDescription());
		setPluginLicense(from.getPluginLicense());
		setLoadOption(from.getLoadOption());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IPlugins> E into(E into) {
		into.from(this);
		return into;
	}
}

/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.pojos;


import com.intuit.datasource.jooq.information_schema.tables.interfaces.IInnodbBufferPoolStats;

import javax.annotation.Generated;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbBufferPoolStats implements IInnodbBufferPoolStats {

	private static final long serialVersionUID = -1340011707;

	private ULong  poolId;
	private ULong  poolSize;
	private ULong  freeBuffers;
	private ULong  databasePages;
	private ULong  oldDatabasePages;
	private ULong  modifiedDatabasePages;
	private ULong  pendingDecompress;
	private ULong  pendingReads;
	private ULong  pendingFlushLru;
	private ULong  pendingFlushList;
	private ULong  pagesMadeYoung;
	private ULong  pagesNotMadeYoung;
	private Double pagesMadeYoungRate;
	private Double pagesMadeNotYoungRate;
	private ULong  numberPagesRead;
	private ULong  numberPagesCreated;
	private ULong  numberPagesWritten;
	private Double pagesReadRate;
	private Double pagesCreateRate;
	private Double pagesWrittenRate;
	private ULong  numberPagesGet;
	private ULong  hitRate;
	private ULong  youngMakePerThousandGets;
	private ULong  notYoungMakePerThousandGets;
	private ULong  numberPagesReadAhead;
	private ULong  numberReadAheadEvicted;
	private Double readAheadRate;
	private Double readAheadEvictedRate;
	private ULong  lruIoTotal;
	private ULong  lruIoCurrent;
	private ULong  uncompressTotal;
	private ULong  uncompressCurrent;

	public InnodbBufferPoolStats() {}

	public InnodbBufferPoolStats(InnodbBufferPoolStats value) {
		this.poolId = value.poolId;
		this.poolSize = value.poolSize;
		this.freeBuffers = value.freeBuffers;
		this.databasePages = value.databasePages;
		this.oldDatabasePages = value.oldDatabasePages;
		this.modifiedDatabasePages = value.modifiedDatabasePages;
		this.pendingDecompress = value.pendingDecompress;
		this.pendingReads = value.pendingReads;
		this.pendingFlushLru = value.pendingFlushLru;
		this.pendingFlushList = value.pendingFlushList;
		this.pagesMadeYoung = value.pagesMadeYoung;
		this.pagesNotMadeYoung = value.pagesNotMadeYoung;
		this.pagesMadeYoungRate = value.pagesMadeYoungRate;
		this.pagesMadeNotYoungRate = value.pagesMadeNotYoungRate;
		this.numberPagesRead = value.numberPagesRead;
		this.numberPagesCreated = value.numberPagesCreated;
		this.numberPagesWritten = value.numberPagesWritten;
		this.pagesReadRate = value.pagesReadRate;
		this.pagesCreateRate = value.pagesCreateRate;
		this.pagesWrittenRate = value.pagesWrittenRate;
		this.numberPagesGet = value.numberPagesGet;
		this.hitRate = value.hitRate;
		this.youngMakePerThousandGets = value.youngMakePerThousandGets;
		this.notYoungMakePerThousandGets = value.notYoungMakePerThousandGets;
		this.numberPagesReadAhead = value.numberPagesReadAhead;
		this.numberReadAheadEvicted = value.numberReadAheadEvicted;
		this.readAheadRate = value.readAheadRate;
		this.readAheadEvictedRate = value.readAheadEvictedRate;
		this.lruIoTotal = value.lruIoTotal;
		this.lruIoCurrent = value.lruIoCurrent;
		this.uncompressTotal = value.uncompressTotal;
		this.uncompressCurrent = value.uncompressCurrent;
	}

	public InnodbBufferPoolStats(
		ULong  poolId,
		ULong  poolSize,
		ULong  freeBuffers,
		ULong  databasePages,
		ULong  oldDatabasePages,
		ULong  modifiedDatabasePages,
		ULong  pendingDecompress,
		ULong  pendingReads,
		ULong  pendingFlushLru,
		ULong  pendingFlushList,
		ULong  pagesMadeYoung,
		ULong  pagesNotMadeYoung,
		Double pagesMadeYoungRate,
		Double pagesMadeNotYoungRate,
		ULong  numberPagesRead,
		ULong  numberPagesCreated,
		ULong  numberPagesWritten,
		Double pagesReadRate,
		Double pagesCreateRate,
		Double pagesWrittenRate,
		ULong  numberPagesGet,
		ULong  hitRate,
		ULong  youngMakePerThousandGets,
		ULong  notYoungMakePerThousandGets,
		ULong  numberPagesReadAhead,
		ULong  numberReadAheadEvicted,
		Double readAheadRate,
		Double readAheadEvictedRate,
		ULong  lruIoTotal,
		ULong  lruIoCurrent,
		ULong  uncompressTotal,
		ULong  uncompressCurrent
	) {
		this.poolId = poolId;
		this.poolSize = poolSize;
		this.freeBuffers = freeBuffers;
		this.databasePages = databasePages;
		this.oldDatabasePages = oldDatabasePages;
		this.modifiedDatabasePages = modifiedDatabasePages;
		this.pendingDecompress = pendingDecompress;
		this.pendingReads = pendingReads;
		this.pendingFlushLru = pendingFlushLru;
		this.pendingFlushList = pendingFlushList;
		this.pagesMadeYoung = pagesMadeYoung;
		this.pagesNotMadeYoung = pagesNotMadeYoung;
		this.pagesMadeYoungRate = pagesMadeYoungRate;
		this.pagesMadeNotYoungRate = pagesMadeNotYoungRate;
		this.numberPagesRead = numberPagesRead;
		this.numberPagesCreated = numberPagesCreated;
		this.numberPagesWritten = numberPagesWritten;
		this.pagesReadRate = pagesReadRate;
		this.pagesCreateRate = pagesCreateRate;
		this.pagesWrittenRate = pagesWrittenRate;
		this.numberPagesGet = numberPagesGet;
		this.hitRate = hitRate;
		this.youngMakePerThousandGets = youngMakePerThousandGets;
		this.notYoungMakePerThousandGets = notYoungMakePerThousandGets;
		this.numberPagesReadAhead = numberPagesReadAhead;
		this.numberReadAheadEvicted = numberReadAheadEvicted;
		this.readAheadRate = readAheadRate;
		this.readAheadEvictedRate = readAheadEvictedRate;
		this.lruIoTotal = lruIoTotal;
		this.lruIoCurrent = lruIoCurrent;
		this.uncompressTotal = uncompressTotal;
		this.uncompressCurrent = uncompressCurrent;
	}

	@Override
	public ULong getPoolId() {
		return this.poolId;
	}

	@Override
	public void setPoolId(ULong poolId) {
		this.poolId = poolId;
	}

	@Override
	public ULong getPoolSize() {
		return this.poolSize;
	}

	@Override
	public void setPoolSize(ULong poolSize) {
		this.poolSize = poolSize;
	}

	@Override
	public ULong getFreeBuffers() {
		return this.freeBuffers;
	}

	@Override
	public void setFreeBuffers(ULong freeBuffers) {
		this.freeBuffers = freeBuffers;
	}

	@Override
	public ULong getDatabasePages() {
		return this.databasePages;
	}

	@Override
	public void setDatabasePages(ULong databasePages) {
		this.databasePages = databasePages;
	}

	@Override
	public ULong getOldDatabasePages() {
		return this.oldDatabasePages;
	}

	@Override
	public void setOldDatabasePages(ULong oldDatabasePages) {
		this.oldDatabasePages = oldDatabasePages;
	}

	@Override
	public ULong getModifiedDatabasePages() {
		return this.modifiedDatabasePages;
	}

	@Override
	public void setModifiedDatabasePages(ULong modifiedDatabasePages) {
		this.modifiedDatabasePages = modifiedDatabasePages;
	}

	@Override
	public ULong getPendingDecompress() {
		return this.pendingDecompress;
	}

	@Override
	public void setPendingDecompress(ULong pendingDecompress) {
		this.pendingDecompress = pendingDecompress;
	}

	@Override
	public ULong getPendingReads() {
		return this.pendingReads;
	}

	@Override
	public void setPendingReads(ULong pendingReads) {
		this.pendingReads = pendingReads;
	}

	@Override
	public ULong getPendingFlushLru() {
		return this.pendingFlushLru;
	}

	@Override
	public void setPendingFlushLru(ULong pendingFlushLru) {
		this.pendingFlushLru = pendingFlushLru;
	}

	@Override
	public ULong getPendingFlushList() {
		return this.pendingFlushList;
	}

	@Override
	public void setPendingFlushList(ULong pendingFlushList) {
		this.pendingFlushList = pendingFlushList;
	}

	@Override
	public ULong getPagesMadeYoung() {
		return this.pagesMadeYoung;
	}

	@Override
	public void setPagesMadeYoung(ULong pagesMadeYoung) {
		this.pagesMadeYoung = pagesMadeYoung;
	}

	@Override
	public ULong getPagesNotMadeYoung() {
		return this.pagesNotMadeYoung;
	}

	@Override
	public void setPagesNotMadeYoung(ULong pagesNotMadeYoung) {
		this.pagesNotMadeYoung = pagesNotMadeYoung;
	}

	@Override
	public Double getPagesMadeYoungRate() {
		return this.pagesMadeYoungRate;
	}

	@Override
	public void setPagesMadeYoungRate(Double pagesMadeYoungRate) {
		this.pagesMadeYoungRate = pagesMadeYoungRate;
	}

	@Override
	public Double getPagesMadeNotYoungRate() {
		return this.pagesMadeNotYoungRate;
	}

	@Override
	public void setPagesMadeNotYoungRate(Double pagesMadeNotYoungRate) {
		this.pagesMadeNotYoungRate = pagesMadeNotYoungRate;
	}

	@Override
	public ULong getNumberPagesRead() {
		return this.numberPagesRead;
	}

	@Override
	public void setNumberPagesRead(ULong numberPagesRead) {
		this.numberPagesRead = numberPagesRead;
	}

	@Override
	public ULong getNumberPagesCreated() {
		return this.numberPagesCreated;
	}

	@Override
	public void setNumberPagesCreated(ULong numberPagesCreated) {
		this.numberPagesCreated = numberPagesCreated;
	}

	@Override
	public ULong getNumberPagesWritten() {
		return this.numberPagesWritten;
	}

	@Override
	public void setNumberPagesWritten(ULong numberPagesWritten) {
		this.numberPagesWritten = numberPagesWritten;
	}

	@Override
	public Double getPagesReadRate() {
		return this.pagesReadRate;
	}

	@Override
	public void setPagesReadRate(Double pagesReadRate) {
		this.pagesReadRate = pagesReadRate;
	}

	@Override
	public Double getPagesCreateRate() {
		return this.pagesCreateRate;
	}

	@Override
	public void setPagesCreateRate(Double pagesCreateRate) {
		this.pagesCreateRate = pagesCreateRate;
	}

	@Override
	public Double getPagesWrittenRate() {
		return this.pagesWrittenRate;
	}

	@Override
	public void setPagesWrittenRate(Double pagesWrittenRate) {
		this.pagesWrittenRate = pagesWrittenRate;
	}

	@Override
	public ULong getNumberPagesGet() {
		return this.numberPagesGet;
	}

	@Override
	public void setNumberPagesGet(ULong numberPagesGet) {
		this.numberPagesGet = numberPagesGet;
	}

	@Override
	public ULong getHitRate() {
		return this.hitRate;
	}

	@Override
	public void setHitRate(ULong hitRate) {
		this.hitRate = hitRate;
	}

	@Override
	public ULong getYoungMakePerThousandGets() {
		return this.youngMakePerThousandGets;
	}

	@Override
	public void setYoungMakePerThousandGets(ULong youngMakePerThousandGets) {
		this.youngMakePerThousandGets = youngMakePerThousandGets;
	}

	@Override
	public ULong getNotYoungMakePerThousandGets() {
		return this.notYoungMakePerThousandGets;
	}

	@Override
	public void setNotYoungMakePerThousandGets(ULong notYoungMakePerThousandGets) {
		this.notYoungMakePerThousandGets = notYoungMakePerThousandGets;
	}

	@Override
	public ULong getNumberPagesReadAhead() {
		return this.numberPagesReadAhead;
	}

	@Override
	public void setNumberPagesReadAhead(ULong numberPagesReadAhead) {
		this.numberPagesReadAhead = numberPagesReadAhead;
	}

	@Override
	public ULong getNumberReadAheadEvicted() {
		return this.numberReadAheadEvicted;
	}

	@Override
	public void setNumberReadAheadEvicted(ULong numberReadAheadEvicted) {
		this.numberReadAheadEvicted = numberReadAheadEvicted;
	}

	@Override
	public Double getReadAheadRate() {
		return this.readAheadRate;
	}

	@Override
	public void setReadAheadRate(Double readAheadRate) {
		this.readAheadRate = readAheadRate;
	}

	@Override
	public Double getReadAheadEvictedRate() {
		return this.readAheadEvictedRate;
	}

	@Override
	public void setReadAheadEvictedRate(Double readAheadEvictedRate) {
		this.readAheadEvictedRate = readAheadEvictedRate;
	}

	@Override
	public ULong getLruIoTotal() {
		return this.lruIoTotal;
	}

	@Override
	public void setLruIoTotal(ULong lruIoTotal) {
		this.lruIoTotal = lruIoTotal;
	}

	@Override
	public ULong getLruIoCurrent() {
		return this.lruIoCurrent;
	}

	@Override
	public void setLruIoCurrent(ULong lruIoCurrent) {
		this.lruIoCurrent = lruIoCurrent;
	}

	@Override
	public ULong getUncompressTotal() {
		return this.uncompressTotal;
	}

	@Override
	public void setUncompressTotal(ULong uncompressTotal) {
		this.uncompressTotal = uncompressTotal;
	}

	@Override
	public ULong getUncompressCurrent() {
		return this.uncompressCurrent;
	}

	@Override
	public void setUncompressCurrent(ULong uncompressCurrent) {
		this.uncompressCurrent = uncompressCurrent;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("InnodbBufferPoolStats (");

		sb.append(poolId);
		sb.append(", ").append(poolSize);
		sb.append(", ").append(freeBuffers);
		sb.append(", ").append(databasePages);
		sb.append(", ").append(oldDatabasePages);
		sb.append(", ").append(modifiedDatabasePages);
		sb.append(", ").append(pendingDecompress);
		sb.append(", ").append(pendingReads);
		sb.append(", ").append(pendingFlushLru);
		sb.append(", ").append(pendingFlushList);
		sb.append(", ").append(pagesMadeYoung);
		sb.append(", ").append(pagesNotMadeYoung);
		sb.append(", ").append(pagesMadeYoungRate);
		sb.append(", ").append(pagesMadeNotYoungRate);
		sb.append(", ").append(numberPagesRead);
		sb.append(", ").append(numberPagesCreated);
		sb.append(", ").append(numberPagesWritten);
		sb.append(", ").append(pagesReadRate);
		sb.append(", ").append(pagesCreateRate);
		sb.append(", ").append(pagesWrittenRate);
		sb.append(", ").append(numberPagesGet);
		sb.append(", ").append(hitRate);
		sb.append(", ").append(youngMakePerThousandGets);
		sb.append(", ").append(notYoungMakePerThousandGets);
		sb.append(", ").append(numberPagesReadAhead);
		sb.append(", ").append(numberReadAheadEvicted);
		sb.append(", ").append(readAheadRate);
		sb.append(", ").append(readAheadEvictedRate);
		sb.append(", ").append(lruIoTotal);
		sb.append(", ").append(lruIoCurrent);
		sb.append(", ").append(uncompressTotal);
		sb.append(", ").append(uncompressCurrent);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IInnodbBufferPoolStats from) {
		setPoolId(from.getPoolId());
		setPoolSize(from.getPoolSize());
		setFreeBuffers(from.getFreeBuffers());
		setDatabasePages(from.getDatabasePages());
		setOldDatabasePages(from.getOldDatabasePages());
		setModifiedDatabasePages(from.getModifiedDatabasePages());
		setPendingDecompress(from.getPendingDecompress());
		setPendingReads(from.getPendingReads());
		setPendingFlushLru(from.getPendingFlushLru());
		setPendingFlushList(from.getPendingFlushList());
		setPagesMadeYoung(from.getPagesMadeYoung());
		setPagesNotMadeYoung(from.getPagesNotMadeYoung());
		setPagesMadeYoungRate(from.getPagesMadeYoungRate());
		setPagesMadeNotYoungRate(from.getPagesMadeNotYoungRate());
		setNumberPagesRead(from.getNumberPagesRead());
		setNumberPagesCreated(from.getNumberPagesCreated());
		setNumberPagesWritten(from.getNumberPagesWritten());
		setPagesReadRate(from.getPagesReadRate());
		setPagesCreateRate(from.getPagesCreateRate());
		setPagesWrittenRate(from.getPagesWrittenRate());
		setNumberPagesGet(from.getNumberPagesGet());
		setHitRate(from.getHitRate());
		setYoungMakePerThousandGets(from.getYoungMakePerThousandGets());
		setNotYoungMakePerThousandGets(from.getNotYoungMakePerThousandGets());
		setNumberPagesReadAhead(from.getNumberPagesReadAhead());
		setNumberReadAheadEvicted(from.getNumberReadAheadEvicted());
		setReadAheadRate(from.getReadAheadRate());
		setReadAheadEvictedRate(from.getReadAheadEvictedRate());
		setLruIoTotal(from.getLruIoTotal());
		setLruIoCurrent(from.getLruIoCurrent());
		setUncompressTotal(from.getUncompressTotal());
		setUncompressCurrent(from.getUncompressCurrent());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IInnodbBufferPoolStats> E into(E into) {
		into.from(this);
		return into;
	}
}

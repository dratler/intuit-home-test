/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.information_schema.tables.interfaces;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IEvents extends Serializable {

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_CATALOG</code>.
	 */
	public void setEventCatalog(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_CATALOG</code>.
	 */
	public String getEventCatalog();

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_SCHEMA</code>.
	 */
	public void setEventSchema(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_SCHEMA</code>.
	 */
	public String getEventSchema();

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_NAME</code>.
	 */
	public void setEventName(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_NAME</code>.
	 */
	public String getEventName();

	/**
	 * Setter for <code>information_schema.EVENTS.DEFINER</code>.
	 */
	public void setDefiner(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.DEFINER</code>.
	 */
	public String getDefiner();

	/**
	 * Setter for <code>information_schema.EVENTS.TIME_ZONE</code>.
	 */
	public void setTimeZone(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.TIME_ZONE</code>.
	 */
	public String getTimeZone();

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_BODY</code>.
	 */
	public void setEventBody(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_BODY</code>.
	 */
	public String getEventBody();

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_DEFINITION</code>.
	 */
	public void setEventDefinition(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_DEFINITION</code>.
	 */
	public String getEventDefinition();

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_TYPE</code>.
	 */
	public void setEventType(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_TYPE</code>.
	 */
	public String getEventType();

	/**
	 * Setter for <code>information_schema.EVENTS.EXECUTE_AT</code>.
	 */
	public void setExecuteAt(Timestamp value);

	/**
	 * Getter for <code>information_schema.EVENTS.EXECUTE_AT</code>.
	 */
	public Timestamp getExecuteAt();

	/**
	 * Setter for <code>information_schema.EVENTS.INTERVAL_VALUE</code>.
	 */
	public void setIntervalValue(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.INTERVAL_VALUE</code>.
	 */
	public String getIntervalValue();

	/**
	 * Setter for <code>information_schema.EVENTS.INTERVAL_FIELD</code>.
	 */
	public void setIntervalField(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.INTERVAL_FIELD</code>.
	 */
	public String getIntervalField();

	/**
	 * Setter for <code>information_schema.EVENTS.SQL_MODE</code>.
	 */
	public void setSqlMode(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.SQL_MODE</code>.
	 */
	public String getSqlMode();

	/**
	 * Setter for <code>information_schema.EVENTS.STARTS</code>.
	 */
	public void setStarts(Timestamp value);

	/**
	 * Getter for <code>information_schema.EVENTS.STARTS</code>.
	 */
	public Timestamp getStarts();

	/**
	 * Setter for <code>information_schema.EVENTS.ENDS</code>.
	 */
	public void setEnds(Timestamp value);

	/**
	 * Getter for <code>information_schema.EVENTS.ENDS</code>.
	 */
	public Timestamp getEnds();

	/**
	 * Setter for <code>information_schema.EVENTS.STATUS</code>.
	 */
	public void setStatus(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.STATUS</code>.
	 */
	public String getStatus();

	/**
	 * Setter for <code>information_schema.EVENTS.ON_COMPLETION</code>.
	 */
	public void setOnCompletion(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.ON_COMPLETION</code>.
	 */
	public String getOnCompletion();

	/**
	 * Setter for <code>information_schema.EVENTS.CREATED</code>.
	 */
	public void setCreated(Timestamp value);

	/**
	 * Getter for <code>information_schema.EVENTS.CREATED</code>.
	 */
	public Timestamp getCreated();

	/**
	 * Setter for <code>information_schema.EVENTS.LAST_ALTERED</code>.
	 */
	public void setLastAltered(Timestamp value);

	/**
	 * Getter for <code>information_schema.EVENTS.LAST_ALTERED</code>.
	 */
	public Timestamp getLastAltered();

	/**
	 * Setter for <code>information_schema.EVENTS.LAST_EXECUTED</code>.
	 */
	public void setLastExecuted(Timestamp value);

	/**
	 * Getter for <code>information_schema.EVENTS.LAST_EXECUTED</code>.
	 */
	public Timestamp getLastExecuted();

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_COMMENT</code>.
	 */
	public void setEventComment(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_COMMENT</code>.
	 */
	public String getEventComment();

	/**
	 * Setter for <code>information_schema.EVENTS.ORIGINATOR</code>.
	 */
	public void setOriginator(Long value);

	/**
	 * Getter for <code>information_schema.EVENTS.ORIGINATOR</code>.
	 */
	public Long getOriginator();

	/**
	 * Setter for <code>information_schema.EVENTS.CHARACTER_SET_CLIENT</code>.
	 */
	public void setCharacterSetClient(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.CHARACTER_SET_CLIENT</code>.
	 */
	public String getCharacterSetClient();

	/**
	 * Setter for <code>information_schema.EVENTS.COLLATION_CONNECTION</code>.
	 */
	public void setCollationConnection(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.COLLATION_CONNECTION</code>.
	 */
	public String getCollationConnection();

	/**
	 * Setter for <code>information_schema.EVENTS.DATABASE_COLLATION</code>.
	 */
	public void setDatabaseCollation(String value);

	/**
	 * Getter for <code>information_schema.EVENTS.DATABASE_COLLATION</code>.
	 */
	public String getDatabaseCollation();

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Load data from another generated Record/POJO implementing the common interface IEvents
	 */
	public void from(com.intuit.datasource.jooq.information_schema.tables.interfaces.IEvents from);

	/**
	 * Copy data into another generated Record/POJO implementing the common interface IEvents
	 */
	public <E extends com.intuit.datasource.jooq.information_schema.tables.interfaces.IEvents> E into(E into);
}

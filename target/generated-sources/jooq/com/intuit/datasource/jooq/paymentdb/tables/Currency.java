/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.paymentdb.tables;


import com.intuit.datasource.jooq.paymentdb.Keys;
import com.intuit.datasource.jooq.paymentdb.Paymentdb;
import com.intuit.datasource.jooq.paymentdb.tables.records.CurrencyRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Currency extends TableImpl<CurrencyRecord> {

	private static final long serialVersionUID = 173048151;

	/**
	 * The reference instance of <code>paymentdb.currency</code>
	 */
	public static final Currency CURRENCY = new Currency();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CurrencyRecord> getRecordType() {
		return CurrencyRecord.class;
	}

	/**
	 * The column <code>paymentdb.currency.id</code>.
	 */
	public final TableField<CurrencyRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>paymentdb.currency.short_name</code>.
	 */
	public final TableField<CurrencyRecord, String> SHORT_NAME = createField("short_name", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * Create a <code>paymentdb.currency</code> table reference
	 */
	public Currency() {
		this("currency", null);
	}

	/**
	 * Create an aliased <code>paymentdb.currency</code> table reference
	 */
	public Currency(String alias) {
		this(alias, CURRENCY);
	}

	private Currency(String alias, Table<CurrencyRecord> aliased) {
		this(alias, aliased, null);
	}

	private Currency(String alias, Table<CurrencyRecord> aliased, Field<?>[] parameters) {
		super(alias, Paymentdb.PAYMENTDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CurrencyRecord, UInteger> getIdentity() {
		return Keys.IDENTITY_CURRENCY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CurrencyRecord> getPrimaryKey() {
		return Keys.KEY_CURRENCY_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CurrencyRecord>> getKeys() {
		return Arrays.<UniqueKey<CurrencyRecord>>asList(Keys.KEY_CURRENCY_PRIMARY, Keys.KEY_CURRENCY_ID, Keys.KEY_CURRENCY_SHORT_NAME);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Currency as(String alias) {
		return new Currency(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Currency rename(String name) {
		return new Currency(name, null);
	}
}

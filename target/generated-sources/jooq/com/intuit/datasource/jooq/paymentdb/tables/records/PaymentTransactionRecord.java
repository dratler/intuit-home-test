/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.paymentdb.tables.records;


import com.intuit.datasource.jooq.paymentdb.tables.PaymentTransaction;
import com.intuit.datasource.jooq.paymentdb.tables.interfaces.IPaymentTransaction;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentTransactionRecord extends UpdatableRecordImpl<PaymentTransactionRecord> implements Record9<UInteger, Double, String, String, String, String, Byte, Timestamp, Timestamp>, IPaymentTransaction {

	private static final long serialVersionUID = 1237581371;

	/**
	 * Setter for <code>paymentdb.payment_transaction.id</code>.
	 */
	@Override
	public void setId(UInteger value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.id</code>.
	 */
	@Override
	public UInteger getId() {
		return (UInteger) getValue(0);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.amount</code>.
	 */
	@Override
	public void setAmount(Double value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.amount</code>.
	 */
	@Override
	public Double getAmount() {
		return (Double) getValue(1);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.currency</code>.
	 */
	@Override
	public void setCurrency(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.currency</code>.
	 */
	@Override
	public String getCurrency() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.user_id</code>.
	 */
	@Override
	public void setUserId(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.user_id</code>.
	 */
	@Override
	public String getUserId() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.payee_id</code>.
	 */
	@Override
	public void setPayeeId(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.payee_id</code>.
	 */
	@Override
	public String getPayeeId() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.payment_method_id</code>.
	 */
	@Override
	public void setPaymentMethodId(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.payment_method_id</code>.
	 */
	@Override
	public String getPaymentMethodId() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.is_transaction_approved</code>.
	 */
	@Override
	public void setIsTransactionApproved(Byte value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.is_transaction_approved</code>.
	 */
	@Override
	public Byte getIsTransactionApproved() {
		return (Byte) getValue(6);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.created_at</code>.
	 */
	@Override
	public void setCreatedAt(Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.created_at</code>.
	 */
	@Override
	public Timestamp getCreatedAt() {
		return (Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.updated_at</code>.
	 */
	@Override
	public void setUpdatedAt(Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.updated_at</code>.
	 */
	@Override
	public Timestamp getUpdatedAt() {
		return (Timestamp) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UInteger> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<UInteger, Double, String, String, String, String, Byte, Timestamp, Timestamp> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<UInteger, Double, String, String, String, String, Byte, Timestamp, Timestamp> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field1() {
		return PaymentTransaction.PAYMENT_TRANSACTION.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field2() {
		return PaymentTransaction.PAYMENT_TRANSACTION.AMOUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return PaymentTransaction.PAYMENT_TRANSACTION.CURRENCY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return PaymentTransaction.PAYMENT_TRANSACTION.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return PaymentTransaction.PAYMENT_TRANSACTION.PAYEE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return PaymentTransaction.PAYMENT_TRANSACTION.PAYMENT_METHOD_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field7() {
		return PaymentTransaction.PAYMENT_TRANSACTION.IS_TRANSACTION_APPROVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return PaymentTransaction.PAYMENT_TRANSACTION.CREATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return PaymentTransaction.PAYMENT_TRANSACTION.UPDATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value2() {
		return getAmount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getCurrency();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getPayeeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getPaymentMethodId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value7() {
		return getIsTransactionApproved();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getCreatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getUpdatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value1(UInteger value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value2(Double value) {
		setAmount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value3(String value) {
		setCurrency(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value4(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value5(String value) {
		setPayeeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value6(String value) {
		setPaymentMethodId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value7(Byte value) {
		setIsTransactionApproved(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value8(Timestamp value) {
		setCreatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value9(Timestamp value) {
		setUpdatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord values(UInteger value1, Double value2, String value3, String value4, String value5, String value6, Byte value7, Timestamp value8, Timestamp value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IPaymentTransaction from) {
		setId(from.getId());
		setAmount(from.getAmount());
		setCurrency(from.getCurrency());
		setUserId(from.getUserId());
		setPayeeId(from.getPayeeId());
		setPaymentMethodId(from.getPaymentMethodId());
		setIsTransactionApproved(from.getIsTransactionApproved());
		setCreatedAt(from.getCreatedAt());
		setUpdatedAt(from.getUpdatedAt());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IPaymentTransaction> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PaymentTransactionRecord
	 */
	public PaymentTransactionRecord() {
		super(PaymentTransaction.PAYMENT_TRANSACTION);
	}

	/**
	 * Create a detached, initialised PaymentTransactionRecord
	 */
	public PaymentTransactionRecord(UInteger id, Double amount, String currency, String userId, String payeeId, String paymentMethodId, Byte isTransactionApproved, Timestamp createdAt, Timestamp updatedAt) {
		super(PaymentTransaction.PAYMENT_TRANSACTION);

		setValue(0, id);
		setValue(1, amount);
		setValue(2, currency);
		setValue(3, userId);
		setValue(4, payeeId);
		setValue(5, paymentMethodId);
		setValue(6, isTransactionApproved);
		setValue(7, createdAt);
		setValue(8, updatedAt);
	}
}

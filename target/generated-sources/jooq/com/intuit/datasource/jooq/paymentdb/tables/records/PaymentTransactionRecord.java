/**
 * This class is generated by jOOQ
 */
package com.intuit.datasource.jooq.paymentdb.tables.records;


import com.intuit.datasource.jooq.paymentdb.tables.PaymentTransaction;
import com.intuit.datasource.jooq.paymentdb.tables.interfaces.IPaymentTransaction;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentTransactionRecord extends UpdatableRecordImpl<PaymentTransactionRecord> implements Record7<UInteger, Double, UInteger, UInteger, UInteger, UInteger, Byte>, IPaymentTransaction {

	private static final long serialVersionUID = -1547803439;

	/**
	 * Setter for <code>paymentdb.payment_transaction.id</code>.
	 */
	@Override
	public void setId(UInteger value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.id</code>.
	 */
	@Override
	public UInteger getId() {
		return (UInteger) getValue(0);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.amount</code>.
	 */
	@Override
	public void setAmount(Double value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.amount</code>.
	 */
	@Override
	public Double getAmount() {
		return (Double) getValue(1);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.c_id</code>.
	 */
	@Override
	public void setCId(UInteger value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.c_id</code>.
	 */
	@Override
	public UInteger getCId() {
		return (UInteger) getValue(2);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.u_id</code>.
	 */
	@Override
	public void setUId(UInteger value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.u_id</code>.
	 */
	@Override
	public UInteger getUId() {
		return (UInteger) getValue(3);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.p_id</code>.
	 */
	@Override
	public void setPId(UInteger value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.p_id</code>.
	 */
	@Override
	public UInteger getPId() {
		return (UInteger) getValue(4);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.p_m_id</code>.
	 */
	@Override
	public void setPMId(UInteger value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.p_m_id</code>.
	 */
	@Override
	public UInteger getPMId() {
		return (UInteger) getValue(5);
	}

	/**
	 * Setter for <code>paymentdb.payment_transaction.is_transaction_approved</code>.
	 */
	@Override
	public void setIsTransactionApproved(Byte value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>paymentdb.payment_transaction.is_transaction_approved</code>.
	 */
	@Override
	public Byte getIsTransactionApproved() {
		return (Byte) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UInteger> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<UInteger, Double, UInteger, UInteger, UInteger, UInteger, Byte> fieldsRow() {
		return (Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<UInteger, Double, UInteger, UInteger, UInteger, UInteger, Byte> valuesRow() {
		return (Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field1() {
		return PaymentTransaction.PAYMENT_TRANSACTION.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field2() {
		return PaymentTransaction.PAYMENT_TRANSACTION.AMOUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field3() {
		return PaymentTransaction.PAYMENT_TRANSACTION.C_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field4() {
		return PaymentTransaction.PAYMENT_TRANSACTION.U_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field5() {
		return PaymentTransaction.PAYMENT_TRANSACTION.P_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field6() {
		return PaymentTransaction.PAYMENT_TRANSACTION.P_M_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field7() {
		return PaymentTransaction.PAYMENT_TRANSACTION.IS_TRANSACTION_APPROVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value2() {
		return getAmount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value3() {
		return getCId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value4() {
		return getUId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value5() {
		return getPId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value6() {
		return getPMId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value7() {
		return getIsTransactionApproved();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value1(UInteger value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value2(Double value) {
		setAmount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value3(UInteger value) {
		setCId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value4(UInteger value) {
		setUId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value5(UInteger value) {
		setPId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value6(UInteger value) {
		setPMId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord value7(Byte value) {
		setIsTransactionApproved(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PaymentTransactionRecord values(UInteger value1, Double value2, UInteger value3, UInteger value4, UInteger value5, UInteger value6, Byte value7) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IPaymentTransaction from) {
		setId(from.getId());
		setAmount(from.getAmount());
		setCId(from.getCId());
		setUId(from.getUId());
		setPId(from.getPId());
		setPMId(from.getPMId());
		setIsTransactionApproved(from.getIsTransactionApproved());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IPaymentTransaction> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PaymentTransactionRecord
	 */
	public PaymentTransactionRecord() {
		super(PaymentTransaction.PAYMENT_TRANSACTION);
	}

	/**
	 * Create a detached, initialised PaymentTransactionRecord
	 */
	public PaymentTransactionRecord(UInteger id, Double amount, UInteger cId, UInteger uId, UInteger pId, UInteger pMId, Byte isTransactionApproved) {
		super(PaymentTransaction.PAYMENT_TRANSACTION);

		setValue(0, id);
		setValue(1, amount);
		setValue(2, cId);
		setValue(3, uId);
		setValue(4, pId);
		setValue(5, pMId);
		setValue(6, isTransactionApproved);
	}
}
